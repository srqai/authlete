/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi;

import static org.openapis.openapi.operations.Operations.RequestOperation;

import jakarta.annotation.Nonnull;
import java.lang.Exception;
import java.lang.String;
import org.openapis.openapi.models.components.1api1Percent7BserviceIdPercent7D1vci1jwtissuerPostRequestBodyContentApplication1jsonSchema;
import org.openapis.openapi.models.operations.VciBatchIssueApiRequest;
import org.openapis.openapi.models.operations.VciBatchIssueApiRequestBody;
import org.openapis.openapi.models.operations.VciBatchIssueApiRequestBuilder;
import org.openapis.openapi.models.operations.VciBatchIssueApiResponse;
import org.openapis.openapi.models.operations.VciJwtissuerApiFormRequest;
import org.openapis.openapi.models.operations.VciJwtissuerApiFormRequestBuilder;
import org.openapis.openapi.models.operations.VciJwtissuerApiFormResponse;
import org.openapis.openapi.models.operations.VciJwtissuerApiRequest;
import org.openapis.openapi.models.operations.VciJwtissuerApiRequestBody;
import org.openapis.openapi.models.operations.VciJwtissuerApiRequestBuilder;
import org.openapis.openapi.models.operations.VciJwtissuerApiResponse;
import org.openapis.openapi.operations.VciBatchIssueApiOperation;
import org.openapis.openapi.operations.VciJwtissuerApiFormOperation;
import org.openapis.openapi.operations.VciJwtissuerApiOperation;


public class Credentials {
    private final SDKConfiguration sdkConfiguration;

    Credentials(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * /api/{serviceId}/vci/jwtissuer API
     * 
     * <p>null
     * 
     * @return The call builder
     */
    public VciJwtissuerApiRequestBuilder issueJwt() {
        return new VciJwtissuerApiRequestBuilder(sdkConfiguration);
    }

    /**
     * /api/{serviceId}/vci/jwtissuer API
     * 
     * <p>null
     * 
     * @param serviceId A service ID.
     * @param requestBody 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public VciJwtissuerApiResponse issueJwt(@Nonnull String serviceId, @Nonnull VciJwtissuerApiRequestBody requestBody) throws Exception {
        VciJwtissuerApiRequest request = new VciJwtissuerApiRequest(serviceId, requestBody);
        RequestOperation<VciJwtissuerApiRequest, VciJwtissuerApiResponse> operation
              = new VciJwtissuerApiOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * /api/{serviceId}/vci/jwtissuer API
     * 
     * <p>null
     * 
     * @return The call builder
     */
    public VciJwtissuerApiFormRequestBuilder issueJwtForm() {
        return new VciJwtissuerApiFormRequestBuilder(sdkConfiguration);
    }

    /**
     * /api/{serviceId}/vci/jwtissuer API
     * 
     * <p>null
     * 
     * @param serviceId A service ID.
     * @param 1api1Percent7BserviceIdPercent7D1vci1jwtissuerPostRequestBodyContentApplication1jsonSchema 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public VciJwtissuerApiFormResponse issueJwtForm(@Nonnull String serviceId, @Nonnull 1api1Percent7BserviceIdPercent7D1vci1jwtissuerPostRequestBodyContentApplication1jsonSchema 1api1Percent7BserviceIdPercent7D1vci1jwtissuerPostRequestBodyContentApplication1jsonSchema) throws Exception {
        VciJwtissuerApiFormRequest request = new VciJwtissuerApiFormRequest(serviceId, 1api1Percent7BserviceIdPercent7D1vci1jwtissuerPostRequestBodyContentApplication1jsonSchema);
        RequestOperation<VciJwtissuerApiFormRequest, VciJwtissuerApiFormResponse> operation
              = new VciJwtissuerApiFormOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * /api/{serviceId}/vci/batch/issue API
     * 
     * <p>null
     * 
     * @return The call builder
     */
    public VciBatchIssueApiRequestBuilder issueBatch() {
        return new VciBatchIssueApiRequestBuilder(sdkConfiguration);
    }

    /**
     * /api/{serviceId}/vci/batch/issue API
     * 
     * <p>null
     * 
     * @param serviceId A service ID.
     * @param requestBody 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public VciBatchIssueApiResponse issueBatch(@Nonnull String serviceId, @Nonnull VciBatchIssueApiRequestBody requestBody) throws Exception {
        VciBatchIssueApiRequest request = new VciBatchIssueApiRequest(serviceId, requestBody);
        RequestOperation<VciBatchIssueApiRequest, VciBatchIssueApiResponse> operation
              = new VciBatchIssueApiOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
