/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi;

import static org.openapis.openapi.operations.Operations.RequestOperation;

import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Exception;
import java.lang.String;
import org.openapis.openapi.models.operations.FederationConfigurationApiRequest;
import org.openapis.openapi.models.operations.FederationConfigurationApiRequestBody;
import org.openapis.openapi.models.operations.FederationConfigurationApiRequestBuilder;
import org.openapis.openapi.models.operations.FederationConfigurationApiResponse;
import org.openapis.openapi.operations.FederationConfigurationApiOperation;


public class Federations {
    private final SDKConfiguration sdkConfiguration;

    Federations(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Process Entity Configuration Request
     * 
     * <p>This API gathers the federation configuration about a service.
     * 
     * <p>The authorization server implementation should
     * retrieve the value of the &lt;code&gt;action&lt;/code&gt;
     * response parameter from the API response and take the following steps
     * according to the value.
     * 
     * <p>&lt;h3&gt;&lt;code&gt;OK&lt;/code&gt;&lt;/h3&gt;
     * 
     * <p>When the value of the &lt;code&gt; action&lt;/code&gt; response
     * parameter is &lt;code&gt;OK&lt;/code&gt;, it means that Authlete
     * could prepare an entity configuration successfully.
     * 
     * <p>In this case, the implementation of the entity configuration endpoint of the
     * authorization server should return an HTTP response to the client application
     * with the HTTP status code "`200 OK`" and the content type
     * "`application/entity-statement+jwt`". The message body (= an entity
     * configuration in the JWT format) of the response has been prepared by
     * Authlete's `/federation/configuration` API and it is available as the
     * &lt;code&gt;responseContent&lt;/code&gt; response parameter.
     * 
     * <p>The implementation of the entity configuration endpoint can construct an
     * HTTP response by doing like below.
     * 
     * <p>&lt;pre style="border: solid 1px black; padding: 0.5em;"&gt;
     * 200 OK
     * Content-Type: application/entity-statement+jwt
     * (Other HTTP headers)
     * 
     * <p>&lt;i&gt;(the value of the responseContent response parameter)&lt;/i&gt;&lt;/pre&gt;
     * 
     * <p>&lt;h3&gt;&lt;code&gt;NOT_FOUND&lt;/code&gt;&lt;/h3&gt;
     * 
     * <p>When the value of the &lt;code&gt; action&lt;/code&gt; response
     * parameter is &lt;code&gt;NOT_FOUND&lt;/code&gt;, it means that
     * the service configuration has not enabled the feature of &lt;a href=
     * "https://openid.net/specs/openid-connect-federation-1_0.html"&gt;OpenID Connect
     * Federation 1.0&lt;/a&gt; and so the client application should have not access the
     * entity configuration endpoint.
     * 
     * <p>In this case, the implementation of the entity configuration endpoint of the
     * authorization server should return an HTTP response to the client application
     * with the HTTP status code "`404 Not Found`" and the content type
     * "`application/json`". The message body (= error information in the JSON
     * format) of the response has been prepared by Authlete's
     * `/federation/configuration` API and it is available as the
     * &lt;code&gt;responseContent&lt;/code&gt; response parameter.
     * 
     * <p>The implementation of the entity configuration endpoint can construct an
     * HTTP response by doing like below.
     * 
     * <p>&lt;pre style="border: solid 1px black; padding: 0.5em;"&gt;
     * 404 Not Found
     * Content-Type: application/json
     * (Other HTTP headers)
     * 
     * <p>&lt;i&gt;(the value of the responseContent response parameter)&lt;/i&gt;&lt;/pre&gt;
     * 
     * <p>&lt;h3&gt;&lt;code&gt;INTERNAL_SERVER_ERROR&lt;/code&gt;&lt;/h3&gt;
     * 
     * <p>could prepare an entity configuration successfully.
     * 
     * <p>In this case, the implementation of the entity configuration endpoint of the
     * authorization server should return an HTTP response to the client application
     * with the HTTP status code "`200 OK`" and the content type
     * "`application/entity-statement+jwt`". The message body (= an entity
     * configuration in the JWT format) of the response has been prepared by
     * Authlete's `/federation/configuration` API and it is available as the
     * &lt;code&gt;responseContent&lt;/code&gt; response parameter.
     * 
     * <p>The implementation of the entity configuration endpoint can construct an
     * HTTP response by doing like below.
     * 
     * <p>&lt;pre style="border: solid 1px black; padding: 0.5em;"&gt;
     * 200 OK
     * Content-Type: application/entity-statement+jwt
     * (Other HTTP headers)
     * 
     * <p>&lt;i&gt;(the value of the responseContent response parameter)&lt;/i&gt;&lt;/pre&gt;
     * 
     * <p>&lt;/details&gt;
     * 
     * @return The call builder
     */
    public FederationConfigurationApiRequestBuilder postConfiguration() {
        return new FederationConfigurationApiRequestBuilder(sdkConfiguration);
    }

    /**
     * Process Entity Configuration Request
     * 
     * <p>This API gathers the federation configuration about a service.
     * 
     * <p>The authorization server implementation should
     * retrieve the value of the &lt;code&gt;action&lt;/code&gt;
     * response parameter from the API response and take the following steps
     * according to the value.
     * 
     * <p>&lt;h3&gt;&lt;code&gt;OK&lt;/code&gt;&lt;/h3&gt;
     * 
     * <p>When the value of the &lt;code&gt; action&lt;/code&gt; response
     * parameter is &lt;code&gt;OK&lt;/code&gt;, it means that Authlete
     * could prepare an entity configuration successfully.
     * 
     * <p>In this case, the implementation of the entity configuration endpoint of the
     * authorization server should return an HTTP response to the client application
     * with the HTTP status code "`200 OK`" and the content type
     * "`application/entity-statement+jwt`". The message body (= an entity
     * configuration in the JWT format) of the response has been prepared by
     * Authlete's `/federation/configuration` API and it is available as the
     * &lt;code&gt;responseContent&lt;/code&gt; response parameter.
     * 
     * <p>The implementation of the entity configuration endpoint can construct an
     * HTTP response by doing like below.
     * 
     * <p>&lt;pre style="border: solid 1px black; padding: 0.5em;"&gt;
     * 200 OK
     * Content-Type: application/entity-statement+jwt
     * (Other HTTP headers)
     * 
     * <p>&lt;i&gt;(the value of the responseContent response parameter)&lt;/i&gt;&lt;/pre&gt;
     * 
     * <p>&lt;h3&gt;&lt;code&gt;NOT_FOUND&lt;/code&gt;&lt;/h3&gt;
     * 
     * <p>When the value of the &lt;code&gt; action&lt;/code&gt; response
     * parameter is &lt;code&gt;NOT_FOUND&lt;/code&gt;, it means that
     * the service configuration has not enabled the feature of &lt;a href=
     * "https://openid.net/specs/openid-connect-federation-1_0.html"&gt;OpenID Connect
     * Federation 1.0&lt;/a&gt; and so the client application should have not access the
     * entity configuration endpoint.
     * 
     * <p>In this case, the implementation of the entity configuration endpoint of the
     * authorization server should return an HTTP response to the client application
     * with the HTTP status code "`404 Not Found`" and the content type
     * "`application/json`". The message body (= error information in the JSON
     * format) of the response has been prepared by Authlete's
     * `/federation/configuration` API and it is available as the
     * &lt;code&gt;responseContent&lt;/code&gt; response parameter.
     * 
     * <p>The implementation of the entity configuration endpoint can construct an
     * HTTP response by doing like below.
     * 
     * <p>&lt;pre style="border: solid 1px black; padding: 0.5em;"&gt;
     * 404 Not Found
     * Content-Type: application/json
     * (Other HTTP headers)
     * 
     * <p>&lt;i&gt;(the value of the responseContent response parameter)&lt;/i&gt;&lt;/pre&gt;
     * 
     * <p>&lt;h3&gt;&lt;code&gt;INTERNAL_SERVER_ERROR&lt;/code&gt;&lt;/h3&gt;
     * 
     * <p>could prepare an entity configuration successfully.
     * 
     * <p>In this case, the implementation of the entity configuration endpoint of the
     * authorization server should return an HTTP response to the client application
     * with the HTTP status code "`200 OK`" and the content type
     * "`application/entity-statement+jwt`". The message body (= an entity
     * configuration in the JWT format) of the response has been prepared by
     * Authlete's `/federation/configuration` API and it is available as the
     * &lt;code&gt;responseContent&lt;/code&gt; response parameter.
     * 
     * <p>The implementation of the entity configuration endpoint can construct an
     * HTTP response by doing like below.
     * 
     * <p>&lt;pre style="border: solid 1px black; padding: 0.5em;"&gt;
     * 200 OK
     * Content-Type: application/entity-statement+jwt
     * (Other HTTP headers)
     * 
     * <p>&lt;i&gt;(the value of the responseContent response parameter)&lt;/i&gt;&lt;/pre&gt;
     * 
     * <p>&lt;/details&gt;
     * 
     * @param serviceId A service ID.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public FederationConfigurationApiResponse postConfiguration(@Nonnull String serviceId) throws Exception {
        return postConfiguration(serviceId, null, null);
    }

    /**
     * Process Entity Configuration Request
     * 
     * <p>This API gathers the federation configuration about a service.
     * 
     * <p>The authorization server implementation should
     * retrieve the value of the &lt;code&gt;action&lt;/code&gt;
     * response parameter from the API response and take the following steps
     * according to the value.
     * 
     * <p>&lt;h3&gt;&lt;code&gt;OK&lt;/code&gt;&lt;/h3&gt;
     * 
     * <p>When the value of the &lt;code&gt; action&lt;/code&gt; response
     * parameter is &lt;code&gt;OK&lt;/code&gt;, it means that Authlete
     * could prepare an entity configuration successfully.
     * 
     * <p>In this case, the implementation of the entity configuration endpoint of the
     * authorization server should return an HTTP response to the client application
     * with the HTTP status code "`200 OK`" and the content type
     * "`application/entity-statement+jwt`". The message body (= an entity
     * configuration in the JWT format) of the response has been prepared by
     * Authlete's `/federation/configuration` API and it is available as the
     * &lt;code&gt;responseContent&lt;/code&gt; response parameter.
     * 
     * <p>The implementation of the entity configuration endpoint can construct an
     * HTTP response by doing like below.
     * 
     * <p>&lt;pre style="border: solid 1px black; padding: 0.5em;"&gt;
     * 200 OK
     * Content-Type: application/entity-statement+jwt
     * (Other HTTP headers)
     * 
     * <p>&lt;i&gt;(the value of the responseContent response parameter)&lt;/i&gt;&lt;/pre&gt;
     * 
     * <p>&lt;h3&gt;&lt;code&gt;NOT_FOUND&lt;/code&gt;&lt;/h3&gt;
     * 
     * <p>When the value of the &lt;code&gt; action&lt;/code&gt; response
     * parameter is &lt;code&gt;NOT_FOUND&lt;/code&gt;, it means that
     * the service configuration has not enabled the feature of &lt;a href=
     * "https://openid.net/specs/openid-connect-federation-1_0.html"&gt;OpenID Connect
     * Federation 1.0&lt;/a&gt; and so the client application should have not access the
     * entity configuration endpoint.
     * 
     * <p>In this case, the implementation of the entity configuration endpoint of the
     * authorization server should return an HTTP response to the client application
     * with the HTTP status code "`404 Not Found`" and the content type
     * "`application/json`". The message body (= error information in the JSON
     * format) of the response has been prepared by Authlete's
     * `/federation/configuration` API and it is available as the
     * &lt;code&gt;responseContent&lt;/code&gt; response parameter.
     * 
     * <p>The implementation of the entity configuration endpoint can construct an
     * HTTP response by doing like below.
     * 
     * <p>&lt;pre style="border: solid 1px black; padding: 0.5em;"&gt;
     * 404 Not Found
     * Content-Type: application/json
     * (Other HTTP headers)
     * 
     * <p>&lt;i&gt;(the value of the responseContent response parameter)&lt;/i&gt;&lt;/pre&gt;
     * 
     * <p>&lt;h3&gt;&lt;code&gt;INTERNAL_SERVER_ERROR&lt;/code&gt;&lt;/h3&gt;
     * 
     * <p>could prepare an entity configuration successfully.
     * 
     * <p>In this case, the implementation of the entity configuration endpoint of the
     * authorization server should return an HTTP response to the client application
     * with the HTTP status code "`200 OK`" and the content type
     * "`application/entity-statement+jwt`". The message body (= an entity
     * configuration in the JWT format) of the response has been prepared by
     * Authlete's `/federation/configuration` API and it is available as the
     * &lt;code&gt;responseContent&lt;/code&gt; response parameter.
     * 
     * <p>The implementation of the entity configuration endpoint can construct an
     * HTTP response by doing like below.
     * 
     * <p>&lt;pre style="border: solid 1px black; padding: 0.5em;"&gt;
     * 200 OK
     * Content-Type: application/entity-statement+jwt
     * (Other HTTP headers)
     * 
     * <p>&lt;i&gt;(the value of the responseContent response parameter)&lt;/i&gt;&lt;/pre&gt;
     * 
     * <p>&lt;/details&gt;
     * 
     * @param serviceId A service ID.
     * @param requestBody 
     * @param serverURL Overrides the server URL.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public FederationConfigurationApiResponse postConfiguration(
            @Nonnull String serviceId, @Nullable FederationConfigurationApiRequestBody requestBody,
            @Nullable String serverURL) throws Exception {
        FederationConfigurationApiRequest request = new FederationConfigurationApiRequest(serviceId, requestBody);
        RequestOperation<FederationConfigurationApiRequest, FederationConfigurationApiResponse> operation
              = new FederationConfigurationApiOperation(sdkConfiguration, serverURL);
        return operation.handleResponse(operation.doRequest(request));
    }

}
