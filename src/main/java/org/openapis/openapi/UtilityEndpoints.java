/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi;

import static org.openapis.openapi.operations.Operations.RequestlessOperation;

import jakarta.annotation.Nullable;
import java.lang.Exception;
import java.lang.String;
import org.openapis.openapi.models.operations.InfoApiRequestBuilder;
import org.openapis.openapi.models.operations.InfoApiResponse;
import org.openapis.openapi.models.operations.MiscEchoApiRequestBuilder;
import org.openapis.openapi.models.operations.MiscEchoApiResponse;
import org.openapis.openapi.operations.InfoApi;
import org.openapis.openapi.operations.MiscEchoApi;


public class UtilityEndpoints {
    private final SDKConfiguration sdkConfiguration;

    UtilityEndpoints(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Get Server Metadata
     * 
     * <p>get the server version and enabled features
     * 
     * @return The call builder
     */
    public InfoApiRequestBuilder getInfo() {
        return new InfoApiRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Server Metadata
     * 
     * <p>get the server version and enabled features
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public InfoApiResponse getInfoDirect() throws Exception {
        return getInfo(null);
    }

    /**
     * Get Server Metadata
     * 
     * <p>get the server version and enabled features
     * 
     * @param serverURL Overrides the server URL.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public InfoApiResponse getInfo(@Nullable String serverURL) throws Exception {
        RequestlessOperation<InfoApiResponse> operation
            = new InfoApi.Sync(sdkConfiguration, serverURL);
        return operation.handleResponse(operation.doRequest());
    }

    /**
     * Echo
     * 
     * <p>Echo test endpoint. Will return all path parameters in the request
     * 
     * @return The call builder
     */
    public MiscEchoApiRequestBuilder echo() {
        return new MiscEchoApiRequestBuilder(sdkConfiguration);
    }

    /**
     * Echo
     * 
     * <p>Echo test endpoint. Will return all path parameters in the request
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MiscEchoApiResponse echoDirect() throws Exception {
        return echo(null);
    }

    /**
     * Echo
     * 
     * <p>Echo test endpoint. Will return all path parameters in the request
     * 
     * @param serverURL Overrides the server URL.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public MiscEchoApiResponse echo(@Nullable String serverURL) throws Exception {
        RequestlessOperation<MiscEchoApiResponse> operation
            = new MiscEchoApi.Sync(sdkConfiguration, serverURL);
        return operation.handleResponse(operation.doRequest());
    }

}
