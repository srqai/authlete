/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;


public class ServiceCreateApiCredentialIssuerMetadataResponse {
    /**
     * The identifier of a credential request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("credentialIssuer")
    private String credentialIssuer;

    /**
     * The identifier of the authorization server that the credential issuer
     * relies on for authorization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizationServer")
    private String authorizationServer;

    /**
     * The URL of the credential endpoint of the credential issuer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("credentialEndpoint")
    private Boolean credentialEndpoint;

    /**
     * The URL of the batch credential endpoint of the credential issuer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("batchCredentialEndpoint")
    private Long batchCredentialEndpoint;

    /**
     * The URL of the deferred credential endpoint of the credential issuer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deferredCredentialEndpoint")
    private String deferredCredentialEndpoint;

    /**
     * A JSON array describing supported credentials.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("credentialsSupported")
    private Boolean credentialsSupported;

    @JsonCreator
    public ServiceCreateApiCredentialIssuerMetadataResponse(
            @JsonProperty("credentialIssuer") @Nullable String credentialIssuer,
            @JsonProperty("authorizationServer") @Nullable String authorizationServer,
            @JsonProperty("credentialEndpoint") @Nullable Boolean credentialEndpoint,
            @JsonProperty("batchCredentialEndpoint") @Nullable Long batchCredentialEndpoint,
            @JsonProperty("deferredCredentialEndpoint") @Nullable String deferredCredentialEndpoint,
            @JsonProperty("credentialsSupported") @Nullable Boolean credentialsSupported) {
        this.credentialIssuer = credentialIssuer;
        this.authorizationServer = authorizationServer;
        this.credentialEndpoint = credentialEndpoint;
        this.batchCredentialEndpoint = batchCredentialEndpoint;
        this.deferredCredentialEndpoint = deferredCredentialEndpoint;
        this.credentialsSupported = credentialsSupported;
    }
    
    public ServiceCreateApiCredentialIssuerMetadataResponse() {
        this(null, null, null,
            null, null, null);
    }

    /**
     * The identifier of a credential request.
     */
    public Optional<String> credentialIssuer() {
        return Optional.ofNullable(this.credentialIssuer);
    }

    /**
     * The identifier of the authorization server that the credential issuer
     * relies on for authorization.
     */
    public Optional<String> authorizationServer() {
        return Optional.ofNullable(this.authorizationServer);
    }

    /**
     * The URL of the credential endpoint of the credential issuer.
     */
    public Optional<Boolean> credentialEndpoint() {
        return Optional.ofNullable(this.credentialEndpoint);
    }

    /**
     * The URL of the batch credential endpoint of the credential issuer.
     */
    public Optional<Long> batchCredentialEndpoint() {
        return Optional.ofNullable(this.batchCredentialEndpoint);
    }

    /**
     * The URL of the deferred credential endpoint of the credential issuer.
     */
    public Optional<String> deferredCredentialEndpoint() {
        return Optional.ofNullable(this.deferredCredentialEndpoint);
    }

    /**
     * A JSON array describing supported credentials.
     */
    public Optional<Boolean> credentialsSupported() {
        return Optional.ofNullable(this.credentialsSupported);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The identifier of a credential request.
     */
    public ServiceCreateApiCredentialIssuerMetadataResponse withCredentialIssuer(@Nullable String credentialIssuer) {
        this.credentialIssuer = credentialIssuer;
        return this;
    }


    /**
     * The identifier of the authorization server that the credential issuer
     * relies on for authorization.
     */
    public ServiceCreateApiCredentialIssuerMetadataResponse withAuthorizationServer(@Nullable String authorizationServer) {
        this.authorizationServer = authorizationServer;
        return this;
    }


    /**
     * The URL of the credential endpoint of the credential issuer.
     */
    public ServiceCreateApiCredentialIssuerMetadataResponse withCredentialEndpoint(@Nullable Boolean credentialEndpoint) {
        this.credentialEndpoint = credentialEndpoint;
        return this;
    }


    /**
     * The URL of the batch credential endpoint of the credential issuer.
     */
    public ServiceCreateApiCredentialIssuerMetadataResponse withBatchCredentialEndpoint(@Nullable Long batchCredentialEndpoint) {
        this.batchCredentialEndpoint = batchCredentialEndpoint;
        return this;
    }


    /**
     * The URL of the deferred credential endpoint of the credential issuer.
     */
    public ServiceCreateApiCredentialIssuerMetadataResponse withDeferredCredentialEndpoint(@Nullable String deferredCredentialEndpoint) {
        this.deferredCredentialEndpoint = deferredCredentialEndpoint;
        return this;
    }


    /**
     * A JSON array describing supported credentials.
     */
    public ServiceCreateApiCredentialIssuerMetadataResponse withCredentialsSupported(@Nullable Boolean credentialsSupported) {
        this.credentialsSupported = credentialsSupported;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ServiceCreateApiCredentialIssuerMetadataResponse other = (ServiceCreateApiCredentialIssuerMetadataResponse) o;
        return 
            Utils.enhancedDeepEquals(this.credentialIssuer, other.credentialIssuer) &&
            Utils.enhancedDeepEquals(this.authorizationServer, other.authorizationServer) &&
            Utils.enhancedDeepEquals(this.credentialEndpoint, other.credentialEndpoint) &&
            Utils.enhancedDeepEquals(this.batchCredentialEndpoint, other.batchCredentialEndpoint) &&
            Utils.enhancedDeepEquals(this.deferredCredentialEndpoint, other.deferredCredentialEndpoint) &&
            Utils.enhancedDeepEquals(this.credentialsSupported, other.credentialsSupported);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            credentialIssuer, authorizationServer, credentialEndpoint,
            batchCredentialEndpoint, deferredCredentialEndpoint, credentialsSupported);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ServiceCreateApiCredentialIssuerMetadataResponse.class,
                "credentialIssuer", credentialIssuer,
                "authorizationServer", authorizationServer,
                "credentialEndpoint", credentialEndpoint,
                "batchCredentialEndpoint", batchCredentialEndpoint,
                "deferredCredentialEndpoint", deferredCredentialEndpoint,
                "credentialsSupported", credentialsSupported);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String credentialIssuer;

        private String authorizationServer;

        private Boolean credentialEndpoint;

        private Long batchCredentialEndpoint;

        private String deferredCredentialEndpoint;

        private Boolean credentialsSupported;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The identifier of a credential request.
         */
        public Builder credentialIssuer(@Nullable String credentialIssuer) {
            this.credentialIssuer = credentialIssuer;
            return this;
        }

        /**
         * The identifier of the authorization server that the credential issuer
         * relies on for authorization.
         */
        public Builder authorizationServer(@Nullable String authorizationServer) {
            this.authorizationServer = authorizationServer;
            return this;
        }

        /**
         * The URL of the credential endpoint of the credential issuer.
         */
        public Builder credentialEndpoint(@Nullable Boolean credentialEndpoint) {
            this.credentialEndpoint = credentialEndpoint;
            return this;
        }

        /**
         * The URL of the batch credential endpoint of the credential issuer.
         */
        public Builder batchCredentialEndpoint(@Nullable Long batchCredentialEndpoint) {
            this.batchCredentialEndpoint = batchCredentialEndpoint;
            return this;
        }

        /**
         * The URL of the deferred credential endpoint of the credential issuer.
         */
        public Builder deferredCredentialEndpoint(@Nullable String deferredCredentialEndpoint) {
            this.deferredCredentialEndpoint = deferredCredentialEndpoint;
            return this;
        }

        /**
         * A JSON array describing supported credentials.
         */
        public Builder credentialsSupported(@Nullable Boolean credentialsSupported) {
            this.credentialsSupported = credentialsSupported;
            return this;
        }

        public ServiceCreateApiCredentialIssuerMetadataResponse build() {
            return new ServiceCreateApiCredentialIssuerMetadataResponse(
                credentialIssuer, authorizationServer, credentialEndpoint,
                batchCredentialEndpoint, deferredCredentialEndpoint, credentialsSupported);
        }

    }
}
