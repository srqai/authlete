/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;


public class ClientAuthorizationGetListApiRequest {
    /**
     * A service ID.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=serviceId")
    private String serviceId;

    /**
     * Unique user ID of an end-user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=subject")
    private String subject;

    /**
     * Unique ID of a client developer.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=developer")
    private String developer;

    /**
     * Start index of search results (inclusive). The default value is 0.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=start")
    private Integer start;

    /**
     * End index of search results (exclusive). The default value is 5.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=end")
    private Integer end;

    @JsonCreator
    public ClientAuthorizationGetListApiRequest(
            @Nonnull String serviceId,
            @Nonnull String subject,
            @Nullable String developer,
            @Nullable Integer start,
            @Nullable Integer end) {
        this.serviceId = Optional.ofNullable(serviceId)
            .orElseThrow(() -> new IllegalArgumentException("serviceId cannot be null"));
        this.subject = Optional.ofNullable(subject)
            .orElseThrow(() -> new IllegalArgumentException("subject cannot be null"));
        this.developer = developer;
        this.start = start;
        this.end = end;
    }
    
    public ClientAuthorizationGetListApiRequest(
            @Nonnull String serviceId,
            @Nonnull String subject) {
        this(serviceId, subject, null,
            null, null);
    }

    /**
     * A service ID.
     */
    public String serviceId() {
        return this.serviceId;
    }

    /**
     * Unique user ID of an end-user.
     */
    public String subject() {
        return this.subject;
    }

    /**
     * Unique ID of a client developer.
     */
    public Optional<String> developer() {
        return Optional.ofNullable(this.developer);
    }

    /**
     * Start index of search results (inclusive). The default value is 0.
     */
    public Optional<Integer> start() {
        return Optional.ofNullable(this.start);
    }

    /**
     * End index of search results (exclusive). The default value is 5.
     */
    public Optional<Integer> end() {
        return Optional.ofNullable(this.end);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * A service ID.
     */
    public ClientAuthorizationGetListApiRequest withServiceId(@Nonnull String serviceId) {
        this.serviceId = Utils.checkNotNull(serviceId, "serviceId");
        return this;
    }


    /**
     * Unique user ID of an end-user.
     */
    public ClientAuthorizationGetListApiRequest withSubject(@Nonnull String subject) {
        this.subject = Utils.checkNotNull(subject, "subject");
        return this;
    }


    /**
     * Unique ID of a client developer.
     */
    public ClientAuthorizationGetListApiRequest withDeveloper(@Nullable String developer) {
        this.developer = developer;
        return this;
    }


    /**
     * Start index of search results (inclusive). The default value is 0.
     */
    public ClientAuthorizationGetListApiRequest withStart(@Nullable Integer start) {
        this.start = start;
        return this;
    }


    /**
     * End index of search results (exclusive). The default value is 5.
     */
    public ClientAuthorizationGetListApiRequest withEnd(@Nullable Integer end) {
        this.end = end;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ClientAuthorizationGetListApiRequest other = (ClientAuthorizationGetListApiRequest) o;
        return 
            Utils.enhancedDeepEquals(this.serviceId, other.serviceId) &&
            Utils.enhancedDeepEquals(this.subject, other.subject) &&
            Utils.enhancedDeepEquals(this.developer, other.developer) &&
            Utils.enhancedDeepEquals(this.start, other.start) &&
            Utils.enhancedDeepEquals(this.end, other.end);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            serviceId, subject, developer,
            start, end);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ClientAuthorizationGetListApiRequest.class,
                "serviceId", serviceId,
                "subject", subject,
                "developer", developer,
                "start", start,
                "end", end);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String serviceId;

        private String subject;

        private String developer;

        private Integer start;

        private Integer end;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * A service ID.
         */
        public Builder serviceId(@Nonnull String serviceId) {
            this.serviceId = Utils.checkNotNull(serviceId, "serviceId");
            return this;
        }

        /**
         * Unique user ID of an end-user.
         */
        public Builder subject(@Nonnull String subject) {
            this.subject = Utils.checkNotNull(subject, "subject");
            return this;
        }

        /**
         * Unique ID of a client developer.
         */
        public Builder developer(@Nullable String developer) {
            this.developer = developer;
            return this;
        }

        /**
         * Start index of search results (inclusive). The default value is 0.
         */
        public Builder start(@Nullable Integer start) {
            this.start = start;
            return this;
        }

        /**
         * End index of search results (exclusive). The default value is 5.
         */
        public Builder end(@Nullable Integer end) {
            this.end = end;
            return this;
        }

        public ClientAuthorizationGetListApiRequest build() {
            return new ClientAuthorizationGetListApiRequest(
                serviceId, subject, developer,
                start, end);
        }

    }
}
