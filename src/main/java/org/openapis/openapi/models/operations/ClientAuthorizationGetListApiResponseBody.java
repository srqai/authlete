/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapis.openapi.models.components.1api1Percent7BserviceIdPercent7D1auth1token1get1listGetResponses200ContentApplication1jsonSchemaPropertiesClient;
import org.openapis.openapi.utils.Utils;


public class ClientAuthorizationGetListApiResponseBody {
    /**
     * Start index of search results (inclusive).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start")
    private Integer start;

    /**
     * End index of search results (exclusive).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("end")
    private Integer end;

    /**
     * Unique ID of a client developer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("developer")
    private String developer;

    /**
     * Unique user ID of an end-user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subject")
    private String subject;

    /**
     * Unique ID of a client developer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalCount")
    private Integer totalCount;

    /**
     * An array of clients.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clients")
    private List<1api1Percent7BserviceIdPercent7D1auth1token1get1listGetResponses200ContentApplication1jsonSchemaPropertiesClient> clients;

    @JsonCreator
    public ClientAuthorizationGetListApiResponseBody(
            @JsonProperty("start") @Nullable Integer start,
            @JsonProperty("end") @Nullable Integer end,
            @JsonProperty("developer") @Nullable String developer,
            @JsonProperty("subject") @Nullable String subject,
            @JsonProperty("totalCount") @Nullable Integer totalCount,
            @JsonProperty("clients") @Nullable List<1api1Percent7BserviceIdPercent7D1auth1token1get1listGetResponses200ContentApplication1jsonSchemaPropertiesClient> clients) {
        this.start = start;
        this.end = end;
        this.developer = developer;
        this.subject = subject;
        this.totalCount = totalCount;
        this.clients = clients;
    }
    
    public ClientAuthorizationGetListApiResponseBody() {
        this(null, null, null,
            null, null, null);
    }

    /**
     * Start index of search results (inclusive).
     */
    public Optional<Integer> start() {
        return Optional.ofNullable(this.start);
    }

    /**
     * End index of search results (exclusive).
     */
    public Optional<Integer> end() {
        return Optional.ofNullable(this.end);
    }

    /**
     * Unique ID of a client developer.
     */
    public Optional<String> developer() {
        return Optional.ofNullable(this.developer);
    }

    /**
     * Unique user ID of an end-user.
     */
    public Optional<String> subject() {
        return Optional.ofNullable(this.subject);
    }

    /**
     * Unique ID of a client developer.
     */
    public Optional<Integer> totalCount() {
        return Optional.ofNullable(this.totalCount);
    }

    /**
     * An array of clients.
     */
    public Optional<List<1api1Percent7BserviceIdPercent7D1auth1token1get1listGetResponses200ContentApplication1jsonSchemaPropertiesClient>> clients() {
        return Optional.ofNullable(this.clients);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Start index of search results (inclusive).
     */
    public ClientAuthorizationGetListApiResponseBody withStart(@Nullable Integer start) {
        this.start = start;
        return this;
    }


    /**
     * End index of search results (exclusive).
     */
    public ClientAuthorizationGetListApiResponseBody withEnd(@Nullable Integer end) {
        this.end = end;
        return this;
    }


    /**
     * Unique ID of a client developer.
     */
    public ClientAuthorizationGetListApiResponseBody withDeveloper(@Nullable String developer) {
        this.developer = developer;
        return this;
    }


    /**
     * Unique user ID of an end-user.
     */
    public ClientAuthorizationGetListApiResponseBody withSubject(@Nullable String subject) {
        this.subject = subject;
        return this;
    }


    /**
     * Unique ID of a client developer.
     */
    public ClientAuthorizationGetListApiResponseBody withTotalCount(@Nullable Integer totalCount) {
        this.totalCount = totalCount;
        return this;
    }


    /**
     * An array of clients.
     */
    public ClientAuthorizationGetListApiResponseBody withClients(@Nullable List<1api1Percent7BserviceIdPercent7D1auth1token1get1listGetResponses200ContentApplication1jsonSchemaPropertiesClient> clients) {
        this.clients = clients;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ClientAuthorizationGetListApiResponseBody other = (ClientAuthorizationGetListApiResponseBody) o;
        return 
            Utils.enhancedDeepEquals(this.start, other.start) &&
            Utils.enhancedDeepEquals(this.end, other.end) &&
            Utils.enhancedDeepEquals(this.developer, other.developer) &&
            Utils.enhancedDeepEquals(this.subject, other.subject) &&
            Utils.enhancedDeepEquals(this.totalCount, other.totalCount) &&
            Utils.enhancedDeepEquals(this.clients, other.clients);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            start, end, developer,
            subject, totalCount, clients);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ClientAuthorizationGetListApiResponseBody.class,
                "start", start,
                "end", end,
                "developer", developer,
                "subject", subject,
                "totalCount", totalCount,
                "clients", clients);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Integer start;

        private Integer end;

        private String developer;

        private String subject;

        private Integer totalCount;

        private List<1api1Percent7BserviceIdPercent7D1auth1token1get1listGetResponses200ContentApplication1jsonSchemaPropertiesClient> clients;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Start index of search results (inclusive).
         */
        public Builder start(@Nullable Integer start) {
            this.start = start;
            return this;
        }

        /**
         * End index of search results (exclusive).
         */
        public Builder end(@Nullable Integer end) {
            this.end = end;
            return this;
        }

        /**
         * Unique ID of a client developer.
         */
        public Builder developer(@Nullable String developer) {
            this.developer = developer;
            return this;
        }

        /**
         * Unique user ID of an end-user.
         */
        public Builder subject(@Nullable String subject) {
            this.subject = subject;
            return this;
        }

        /**
         * Unique ID of a client developer.
         */
        public Builder totalCount(@Nullable Integer totalCount) {
            this.totalCount = totalCount;
            return this;
        }

        /**
         * An array of clients.
         */
        public Builder clients(@Nullable List<1api1Percent7BserviceIdPercent7D1auth1token1get1listGetResponses200ContentApplication1jsonSchemaPropertiesClient> clients) {
            this.clients = clients;
            return this;
        }

        public ClientAuthorizationGetListApiResponseBody build() {
            return new ClientAuthorizationGetListApiResponseBody(
                start, end, developer,
                subject, totalCount, clients);
        }

    }
}
