/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;


public class VciOfferCreateApiInfo {
    /**
     * The identifier of the credential offer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("identifier")
    private String identifier;

    /**
     * The credential offer in the JSON format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("credentialOffer")
    private String credentialOffer;

    /**
     * The identifier of the credential issuer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("credentialIssuer")
    private String credentialIssuer;

    /**
     * The value of the `credentials` object in the JSON format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("credentials")
    private String credentials;

    /**
     * The flag indicating whether the `authorization_code` object is
     * included in the `grants` object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizationCodeGrantIncluded")
    private Boolean authorizationCodeGrantIncluded;

    /**
     * The flag indicating whether the `issuer_state` property is
     * included in the `authorization_code` object in the `grants`
     * object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issuerStateIncluded")
    private Boolean issuerStateIncluded;

    /**
     * The value of the `issuer_state` property in the
     * `authorization_code` object in the `grants` object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issuerState")
    private String issuerState;

    /**
     * The flag indicating whether the
     * `urn:ietf:params:oauth:grant-type:pre-authorized_code` object is
     * included in the `grants` object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preAuthorizedCodeGrantIncluded")
    private Boolean preAuthorizedCodeGrantIncluded;

    /**
     * The value of the `pre-authorized_code` property in the
     * `urn:ietf:params:oauth:grant-type:pre-authorized_code` object in
     * the `grants` object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preAuthorizedCode")
    private String preAuthorizedCode;

    /**
     * The value of the `user_pin_required` property in the
     * `urn:ietf:params:oauth:grant-type:pre-authorized_code` object in
     * the `grants` object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userPinRequired")
    private Boolean userPinRequired;

    /**
     * The value of the user PIN associated with the credential offer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userPin")
    private String userPin;

    /**
     * The subject associated with the credential offer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subject")
    private String subject;

    /**
     * The time at which the credential offer will expire.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expiresAt")
    private Long expiresAt;

    /**
     * The general-purpose arbitrary string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("context")
    private String context;

    /**
     * Extra properties to associate with the credential offer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    private List<VciOfferCreateApiInfoProperty> properties;

    /**
     * Additional claims that are added to the payload part of the JWT
     * access token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jwtAtClaims")
    private String jwtAtClaims;

    /**
     * The time at which the user authentication was performed during
     * the course of issuing the credential offer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authTime")
    private Long authTime;

    /**
     * The Authentication Context Class Reference of the user authentication
     * performed during the course of issuing the credential offer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("acr")
    private String acr;

    @JsonCreator
    public VciOfferCreateApiInfo(
            @JsonProperty("identifier") @Nullable String identifier,
            @JsonProperty("credentialOffer") @Nullable String credentialOffer,
            @JsonProperty("credentialIssuer") @Nullable String credentialIssuer,
            @JsonProperty("credentials") @Nullable String credentials,
            @JsonProperty("authorizationCodeGrantIncluded") @Nullable Boolean authorizationCodeGrantIncluded,
            @JsonProperty("issuerStateIncluded") @Nullable Boolean issuerStateIncluded,
            @JsonProperty("issuerState") @Nullable String issuerState,
            @JsonProperty("preAuthorizedCodeGrantIncluded") @Nullable Boolean preAuthorizedCodeGrantIncluded,
            @JsonProperty("preAuthorizedCode") @Nullable String preAuthorizedCode,
            @JsonProperty("userPinRequired") @Nullable Boolean userPinRequired,
            @JsonProperty("userPin") @Nullable String userPin,
            @JsonProperty("subject") @Nullable String subject,
            @JsonProperty("expiresAt") @Nullable Long expiresAt,
            @JsonProperty("context") @Nullable String context,
            @JsonProperty("properties") @Nullable List<VciOfferCreateApiInfoProperty> properties,
            @JsonProperty("jwtAtClaims") @Nullable String jwtAtClaims,
            @JsonProperty("authTime") @Nullable Long authTime,
            @JsonProperty("acr") @Nullable String acr) {
        this.identifier = identifier;
        this.credentialOffer = credentialOffer;
        this.credentialIssuer = credentialIssuer;
        this.credentials = credentials;
        this.authorizationCodeGrantIncluded = authorizationCodeGrantIncluded;
        this.issuerStateIncluded = issuerStateIncluded;
        this.issuerState = issuerState;
        this.preAuthorizedCodeGrantIncluded = preAuthorizedCodeGrantIncluded;
        this.preAuthorizedCode = preAuthorizedCode;
        this.userPinRequired = userPinRequired;
        this.userPin = userPin;
        this.subject = subject;
        this.expiresAt = expiresAt;
        this.context = context;
        this.properties = properties;
        this.jwtAtClaims = jwtAtClaims;
        this.authTime = authTime;
        this.acr = acr;
    }
    
    public VciOfferCreateApiInfo() {
        this(null, null, null,
            null, null, null,
            null, null, null,
            null, null, null,
            null, null, null,
            null, null, null);
    }

    /**
     * The identifier of the credential offer.
     */
    public Optional<String> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    /**
     * The credential offer in the JSON format.
     */
    public Optional<String> credentialOffer() {
        return Optional.ofNullable(this.credentialOffer);
    }

    /**
     * The identifier of the credential issuer.
     */
    public Optional<String> credentialIssuer() {
        return Optional.ofNullable(this.credentialIssuer);
    }

    /**
     * The value of the `credentials` object in the JSON format.
     */
    public Optional<String> credentials() {
        return Optional.ofNullable(this.credentials);
    }

    /**
     * The flag indicating whether the `authorization_code` object is
     * included in the `grants` object.
     */
    public Optional<Boolean> authorizationCodeGrantIncluded() {
        return Optional.ofNullable(this.authorizationCodeGrantIncluded);
    }

    /**
     * The flag indicating whether the `issuer_state` property is
     * included in the `authorization_code` object in the `grants`
     * object.
     */
    public Optional<Boolean> issuerStateIncluded() {
        return Optional.ofNullable(this.issuerStateIncluded);
    }

    /**
     * The value of the `issuer_state` property in the
     * `authorization_code` object in the `grants` object.
     */
    public Optional<String> issuerState() {
        return Optional.ofNullable(this.issuerState);
    }

    /**
     * The flag indicating whether the
     * `urn:ietf:params:oauth:grant-type:pre-authorized_code` object is
     * included in the `grants` object.
     */
    public Optional<Boolean> preAuthorizedCodeGrantIncluded() {
        return Optional.ofNullable(this.preAuthorizedCodeGrantIncluded);
    }

    /**
     * The value of the `pre-authorized_code` property in the
     * `urn:ietf:params:oauth:grant-type:pre-authorized_code` object in
     * the `grants` object.
     */
    public Optional<String> preAuthorizedCode() {
        return Optional.ofNullable(this.preAuthorizedCode);
    }

    /**
     * The value of the `user_pin_required` property in the
     * `urn:ietf:params:oauth:grant-type:pre-authorized_code` object in
     * the `grants` object.
     */
    public Optional<Boolean> userPinRequired() {
        return Optional.ofNullable(this.userPinRequired);
    }

    /**
     * The value of the user PIN associated with the credential offer.
     */
    public Optional<String> userPin() {
        return Optional.ofNullable(this.userPin);
    }

    /**
     * The subject associated with the credential offer.
     */
    public Optional<String> subject() {
        return Optional.ofNullable(this.subject);
    }

    /**
     * The time at which the credential offer will expire.
     */
    public Optional<Long> expiresAt() {
        return Optional.ofNullable(this.expiresAt);
    }

    /**
     * The general-purpose arbitrary string.
     */
    public Optional<String> context() {
        return Optional.ofNullable(this.context);
    }

    /**
     * Extra properties to associate with the credential offer.
     */
    public Optional<List<VciOfferCreateApiInfoProperty>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * Additional claims that are added to the payload part of the JWT
     * access token.
     */
    public Optional<String> jwtAtClaims() {
        return Optional.ofNullable(this.jwtAtClaims);
    }

    /**
     * The time at which the user authentication was performed during
     * the course of issuing the credential offer.
     */
    public Optional<Long> authTime() {
        return Optional.ofNullable(this.authTime);
    }

    /**
     * The Authentication Context Class Reference of the user authentication
     * performed during the course of issuing the credential offer.
     */
    public Optional<String> acr() {
        return Optional.ofNullable(this.acr);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The identifier of the credential offer.
     */
    public VciOfferCreateApiInfo withIdentifier(@Nullable String identifier) {
        this.identifier = identifier;
        return this;
    }


    /**
     * The credential offer in the JSON format.
     */
    public VciOfferCreateApiInfo withCredentialOffer(@Nullable String credentialOffer) {
        this.credentialOffer = credentialOffer;
        return this;
    }


    /**
     * The identifier of the credential issuer.
     */
    public VciOfferCreateApiInfo withCredentialIssuer(@Nullable String credentialIssuer) {
        this.credentialIssuer = credentialIssuer;
        return this;
    }


    /**
     * The value of the `credentials` object in the JSON format.
     */
    public VciOfferCreateApiInfo withCredentials(@Nullable String credentials) {
        this.credentials = credentials;
        return this;
    }


    /**
     * The flag indicating whether the `authorization_code` object is
     * included in the `grants` object.
     */
    public VciOfferCreateApiInfo withAuthorizationCodeGrantIncluded(@Nullable Boolean authorizationCodeGrantIncluded) {
        this.authorizationCodeGrantIncluded = authorizationCodeGrantIncluded;
        return this;
    }


    /**
     * The flag indicating whether the `issuer_state` property is
     * included in the `authorization_code` object in the `grants`
     * object.
     */
    public VciOfferCreateApiInfo withIssuerStateIncluded(@Nullable Boolean issuerStateIncluded) {
        this.issuerStateIncluded = issuerStateIncluded;
        return this;
    }


    /**
     * The value of the `issuer_state` property in the
     * `authorization_code` object in the `grants` object.
     */
    public VciOfferCreateApiInfo withIssuerState(@Nullable String issuerState) {
        this.issuerState = issuerState;
        return this;
    }


    /**
     * The flag indicating whether the
     * `urn:ietf:params:oauth:grant-type:pre-authorized_code` object is
     * included in the `grants` object.
     */
    public VciOfferCreateApiInfo withPreAuthorizedCodeGrantIncluded(@Nullable Boolean preAuthorizedCodeGrantIncluded) {
        this.preAuthorizedCodeGrantIncluded = preAuthorizedCodeGrantIncluded;
        return this;
    }


    /**
     * The value of the `pre-authorized_code` property in the
     * `urn:ietf:params:oauth:grant-type:pre-authorized_code` object in
     * the `grants` object.
     */
    public VciOfferCreateApiInfo withPreAuthorizedCode(@Nullable String preAuthorizedCode) {
        this.preAuthorizedCode = preAuthorizedCode;
        return this;
    }


    /**
     * The value of the `user_pin_required` property in the
     * `urn:ietf:params:oauth:grant-type:pre-authorized_code` object in
     * the `grants` object.
     */
    public VciOfferCreateApiInfo withUserPinRequired(@Nullable Boolean userPinRequired) {
        this.userPinRequired = userPinRequired;
        return this;
    }


    /**
     * The value of the user PIN associated with the credential offer.
     */
    public VciOfferCreateApiInfo withUserPin(@Nullable String userPin) {
        this.userPin = userPin;
        return this;
    }


    /**
     * The subject associated with the credential offer.
     */
    public VciOfferCreateApiInfo withSubject(@Nullable String subject) {
        this.subject = subject;
        return this;
    }


    /**
     * The time at which the credential offer will expire.
     */
    public VciOfferCreateApiInfo withExpiresAt(@Nullable Long expiresAt) {
        this.expiresAt = expiresAt;
        return this;
    }


    /**
     * The general-purpose arbitrary string.
     */
    public VciOfferCreateApiInfo withContext(@Nullable String context) {
        this.context = context;
        return this;
    }


    /**
     * Extra properties to associate with the credential offer.
     */
    public VciOfferCreateApiInfo withProperties(@Nullable List<VciOfferCreateApiInfoProperty> properties) {
        this.properties = properties;
        return this;
    }


    /**
     * Additional claims that are added to the payload part of the JWT
     * access token.
     */
    public VciOfferCreateApiInfo withJwtAtClaims(@Nullable String jwtAtClaims) {
        this.jwtAtClaims = jwtAtClaims;
        return this;
    }


    /**
     * The time at which the user authentication was performed during
     * the course of issuing the credential offer.
     */
    public VciOfferCreateApiInfo withAuthTime(@Nullable Long authTime) {
        this.authTime = authTime;
        return this;
    }


    /**
     * The Authentication Context Class Reference of the user authentication
     * performed during the course of issuing the credential offer.
     */
    public VciOfferCreateApiInfo withAcr(@Nullable String acr) {
        this.acr = acr;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VciOfferCreateApiInfo other = (VciOfferCreateApiInfo) o;
        return 
            Utils.enhancedDeepEquals(this.identifier, other.identifier) &&
            Utils.enhancedDeepEquals(this.credentialOffer, other.credentialOffer) &&
            Utils.enhancedDeepEquals(this.credentialIssuer, other.credentialIssuer) &&
            Utils.enhancedDeepEquals(this.credentials, other.credentials) &&
            Utils.enhancedDeepEquals(this.authorizationCodeGrantIncluded, other.authorizationCodeGrantIncluded) &&
            Utils.enhancedDeepEquals(this.issuerStateIncluded, other.issuerStateIncluded) &&
            Utils.enhancedDeepEquals(this.issuerState, other.issuerState) &&
            Utils.enhancedDeepEquals(this.preAuthorizedCodeGrantIncluded, other.preAuthorizedCodeGrantIncluded) &&
            Utils.enhancedDeepEquals(this.preAuthorizedCode, other.preAuthorizedCode) &&
            Utils.enhancedDeepEquals(this.userPinRequired, other.userPinRequired) &&
            Utils.enhancedDeepEquals(this.userPin, other.userPin) &&
            Utils.enhancedDeepEquals(this.subject, other.subject) &&
            Utils.enhancedDeepEquals(this.expiresAt, other.expiresAt) &&
            Utils.enhancedDeepEquals(this.context, other.context) &&
            Utils.enhancedDeepEquals(this.properties, other.properties) &&
            Utils.enhancedDeepEquals(this.jwtAtClaims, other.jwtAtClaims) &&
            Utils.enhancedDeepEquals(this.authTime, other.authTime) &&
            Utils.enhancedDeepEquals(this.acr, other.acr);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            identifier, credentialOffer, credentialIssuer,
            credentials, authorizationCodeGrantIncluded, issuerStateIncluded,
            issuerState, preAuthorizedCodeGrantIncluded, preAuthorizedCode,
            userPinRequired, userPin, subject,
            expiresAt, context, properties,
            jwtAtClaims, authTime, acr);
    }
    
    @Override
    public String toString() {
        return Utils.toString(VciOfferCreateApiInfo.class,
                "identifier", identifier,
                "credentialOffer", credentialOffer,
                "credentialIssuer", credentialIssuer,
                "credentials", credentials,
                "authorizationCodeGrantIncluded", authorizationCodeGrantIncluded,
                "issuerStateIncluded", issuerStateIncluded,
                "issuerState", issuerState,
                "preAuthorizedCodeGrantIncluded", preAuthorizedCodeGrantIncluded,
                "preAuthorizedCode", preAuthorizedCode,
                "userPinRequired", userPinRequired,
                "userPin", userPin,
                "subject", subject,
                "expiresAt", expiresAt,
                "context", context,
                "properties", properties,
                "jwtAtClaims", jwtAtClaims,
                "authTime", authTime,
                "acr", acr);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String identifier;

        private String credentialOffer;

        private String credentialIssuer;

        private String credentials;

        private Boolean authorizationCodeGrantIncluded;

        private Boolean issuerStateIncluded;

        private String issuerState;

        private Boolean preAuthorizedCodeGrantIncluded;

        private String preAuthorizedCode;

        private Boolean userPinRequired;

        private String userPin;

        private String subject;

        private Long expiresAt;

        private String context;

        private List<VciOfferCreateApiInfoProperty> properties;

        private String jwtAtClaims;

        private Long authTime;

        private String acr;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The identifier of the credential offer.
         */
        public Builder identifier(@Nullable String identifier) {
            this.identifier = identifier;
            return this;
        }

        /**
         * The credential offer in the JSON format.
         */
        public Builder credentialOffer(@Nullable String credentialOffer) {
            this.credentialOffer = credentialOffer;
            return this;
        }

        /**
         * The identifier of the credential issuer.
         */
        public Builder credentialIssuer(@Nullable String credentialIssuer) {
            this.credentialIssuer = credentialIssuer;
            return this;
        }

        /**
         * The value of the `credentials` object in the JSON format.
         */
        public Builder credentials(@Nullable String credentials) {
            this.credentials = credentials;
            return this;
        }

        /**
         * The flag indicating whether the `authorization_code` object is
         * included in the `grants` object.
         */
        public Builder authorizationCodeGrantIncluded(@Nullable Boolean authorizationCodeGrantIncluded) {
            this.authorizationCodeGrantIncluded = authorizationCodeGrantIncluded;
            return this;
        }

        /**
         * The flag indicating whether the `issuer_state` property is
         * included in the `authorization_code` object in the `grants`
         * object.
         */
        public Builder issuerStateIncluded(@Nullable Boolean issuerStateIncluded) {
            this.issuerStateIncluded = issuerStateIncluded;
            return this;
        }

        /**
         * The value of the `issuer_state` property in the
         * `authorization_code` object in the `grants` object.
         */
        public Builder issuerState(@Nullable String issuerState) {
            this.issuerState = issuerState;
            return this;
        }

        /**
         * The flag indicating whether the
         * `urn:ietf:params:oauth:grant-type:pre-authorized_code` object is
         * included in the `grants` object.
         */
        public Builder preAuthorizedCodeGrantIncluded(@Nullable Boolean preAuthorizedCodeGrantIncluded) {
            this.preAuthorizedCodeGrantIncluded = preAuthorizedCodeGrantIncluded;
            return this;
        }

        /**
         * The value of the `pre-authorized_code` property in the
         * `urn:ietf:params:oauth:grant-type:pre-authorized_code` object in
         * the `grants` object.
         */
        public Builder preAuthorizedCode(@Nullable String preAuthorizedCode) {
            this.preAuthorizedCode = preAuthorizedCode;
            return this;
        }

        /**
         * The value of the `user_pin_required` property in the
         * `urn:ietf:params:oauth:grant-type:pre-authorized_code` object in
         * the `grants` object.
         */
        public Builder userPinRequired(@Nullable Boolean userPinRequired) {
            this.userPinRequired = userPinRequired;
            return this;
        }

        /**
         * The value of the user PIN associated with the credential offer.
         */
        public Builder userPin(@Nullable String userPin) {
            this.userPin = userPin;
            return this;
        }

        /**
         * The subject associated with the credential offer.
         */
        public Builder subject(@Nullable String subject) {
            this.subject = subject;
            return this;
        }

        /**
         * The time at which the credential offer will expire.
         */
        public Builder expiresAt(@Nullable Long expiresAt) {
            this.expiresAt = expiresAt;
            return this;
        }

        /**
         * The general-purpose arbitrary string.
         */
        public Builder context(@Nullable String context) {
            this.context = context;
            return this;
        }

        /**
         * Extra properties to associate with the credential offer.
         */
        public Builder properties(@Nullable List<VciOfferCreateApiInfoProperty> properties) {
            this.properties = properties;
            return this;
        }

        /**
         * Additional claims that are added to the payload part of the JWT
         * access token.
         */
        public Builder jwtAtClaims(@Nullable String jwtAtClaims) {
            this.jwtAtClaims = jwtAtClaims;
            return this;
        }

        /**
         * The time at which the user authentication was performed during
         * the course of issuing the credential offer.
         */
        public Builder authTime(@Nullable Long authTime) {
            this.authTime = authTime;
            return this;
        }

        /**
         * The Authentication Context Class Reference of the user authentication
         * performed during the course of issuing the credential offer.
         */
        public Builder acr(@Nullable String acr) {
            this.acr = acr;
            return this;
        }

        public VciOfferCreateApiInfo build() {
            return new VciOfferCreateApiInfo(
                identifier, credentialOffer, credentialIssuer,
                credentials, authorizationCodeGrantIncluded, issuerStateIncluded,
                issuerState, preAuthorizedCodeGrantIncluded, preAuthorizedCode,
                userPinRequired, userPin, subject,
                expiresAt, context, properties,
                jwtAtClaims, authTime, acr);
        }

    }
}
