/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapis.openapi.models.components.CredentialIssuanceOrder;
import org.openapis.openapi.utils.Utils;


public class VciBatchIssueApiRequestBody {
    /**
     * The access token that came along with the credential request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessToken")
    private String accessToken;

    /**
     * The instructions for issuance of credentials and/or transaction IDs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orders")
    private List<CredentialIssuanceOrder> orders;

    @JsonCreator
    public VciBatchIssueApiRequestBody(
            @JsonProperty("accessToken") @Nullable String accessToken,
            @JsonProperty("orders") @Nullable List<CredentialIssuanceOrder> orders) {
        this.accessToken = accessToken;
        this.orders = orders;
    }
    
    public VciBatchIssueApiRequestBody() {
        this(null, null);
    }

    /**
     * The access token that came along with the credential request.
     */
    public Optional<String> accessToken() {
        return Optional.ofNullable(this.accessToken);
    }

    /**
     * The instructions for issuance of credentials and/or transaction IDs.
     */
    public Optional<List<CredentialIssuanceOrder>> orders() {
        return Optional.ofNullable(this.orders);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The access token that came along with the credential request.
     */
    public VciBatchIssueApiRequestBody withAccessToken(@Nullable String accessToken) {
        this.accessToken = accessToken;
        return this;
    }


    /**
     * The instructions for issuance of credentials and/or transaction IDs.
     */
    public VciBatchIssueApiRequestBody withOrders(@Nullable List<CredentialIssuanceOrder> orders) {
        this.orders = orders;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VciBatchIssueApiRequestBody other = (VciBatchIssueApiRequestBody) o;
        return 
            Utils.enhancedDeepEquals(this.accessToken, other.accessToken) &&
            Utils.enhancedDeepEquals(this.orders, other.orders);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            accessToken, orders);
    }
    
    @Override
    public String toString() {
        return Utils.toString(VciBatchIssueApiRequestBody.class,
                "accessToken", accessToken,
                "orders", orders);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String accessToken;

        private List<CredentialIssuanceOrder> orders;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The access token that came along with the credential request.
         */
        public Builder accessToken(@Nullable String accessToken) {
            this.accessToken = accessToken;
            return this;
        }

        /**
         * The instructions for issuance of credentials and/or transaction IDs.
         */
        public Builder orders(@Nullable List<CredentialIssuanceOrder> orders) {
            this.orders = orders;
            return this;
        }

        public VciBatchIssueApiRequestBody build() {
            return new VciBatchIssueApiRequestBody(
                accessToken, orders);
        }

    }
}
