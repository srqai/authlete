/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nonnull;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;


public class ClientSecretUpdateApiRequestBody {
    /**
     * The new value of the client secret. Valid characters for a client secret are `A-Z`, `a-z`, `0-9`,
     * `-`, and `_`. The maximum length of a client secret is 86.
     */
    @JsonProperty("clientSecret")
    private String clientSecret;

    @JsonCreator
    public ClientSecretUpdateApiRequestBody(
            @JsonProperty("clientSecret") @Nonnull String clientSecret) {
        this.clientSecret = Optional.ofNullable(clientSecret)
            .orElseThrow(() -> new IllegalArgumentException("clientSecret cannot be null"));
    }

    /**
     * The new value of the client secret. Valid characters for a client secret are `A-Z`, `a-z`, `0-9`,
     * `-`, and `_`. The maximum length of a client secret is 86.
     */
    public String clientSecret() {
        return this.clientSecret;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The new value of the client secret. Valid characters for a client secret are `A-Z`, `a-z`, `0-9`,
     * `-`, and `_`. The maximum length of a client secret is 86.
     */
    public ClientSecretUpdateApiRequestBody withClientSecret(@Nonnull String clientSecret) {
        this.clientSecret = Utils.checkNotNull(clientSecret, "clientSecret");
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ClientSecretUpdateApiRequestBody other = (ClientSecretUpdateApiRequestBody) o;
        return 
            Utils.enhancedDeepEquals(this.clientSecret, other.clientSecret);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            clientSecret);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ClientSecretUpdateApiRequestBody.class,
                "clientSecret", clientSecret);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String clientSecret;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The new value of the client secret. Valid characters for a client secret are `A-Z`, `a-z`, `0-9`,
         * `-`, and `_`. The maximum length of a client secret is 86.
         */
        public Builder clientSecret(@Nonnull String clientSecret) {
            this.clientSecret = Utils.checkNotNull(clientSecret, "clientSecret");
            return this;
        }

        public ClientSecretUpdateApiRequestBody build() {
            return new ClientSecretUpdateApiRequestBody(
                clientSecret);
        }

    }
}
