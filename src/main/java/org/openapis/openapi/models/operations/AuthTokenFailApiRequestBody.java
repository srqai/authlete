/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nonnull;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;


public class AuthTokenFailApiRequestBody {
    /**
     * The ticket issued from Authlete `/auth/token` API.
     */
    @JsonProperty("ticket")
    private String ticket;

    /**
     * The reason of the failure of the token request.
     */
    @JsonProperty("reason")
    private AuthTokenFailApiReason reason;

    @JsonCreator
    public AuthTokenFailApiRequestBody(
            @JsonProperty("ticket") @Nonnull String ticket,
            @JsonProperty("reason") @Nonnull AuthTokenFailApiReason reason) {
        this.ticket = Optional.ofNullable(ticket)
            .orElseThrow(() -> new IllegalArgumentException("ticket cannot be null"));
        this.reason = Optional.ofNullable(reason)
            .orElseThrow(() -> new IllegalArgumentException("reason cannot be null"));
    }

    /**
     * The ticket issued from Authlete `/auth/token` API.
     */
    public String ticket() {
        return this.ticket;
    }

    /**
     * The reason of the failure of the token request.
     */
    public AuthTokenFailApiReason reason() {
        return this.reason;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The ticket issued from Authlete `/auth/token` API.
     */
    public AuthTokenFailApiRequestBody withTicket(@Nonnull String ticket) {
        this.ticket = Utils.checkNotNull(ticket, "ticket");
        return this;
    }


    /**
     * The reason of the failure of the token request.
     */
    public AuthTokenFailApiRequestBody withReason(@Nonnull AuthTokenFailApiReason reason) {
        this.reason = Utils.checkNotNull(reason, "reason");
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AuthTokenFailApiRequestBody other = (AuthTokenFailApiRequestBody) o;
        return 
            Utils.enhancedDeepEquals(this.ticket, other.ticket) &&
            Utils.enhancedDeepEquals(this.reason, other.reason);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            ticket, reason);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AuthTokenFailApiRequestBody.class,
                "ticket", ticket,
                "reason", reason);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String ticket;

        private AuthTokenFailApiReason reason;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The ticket issued from Authlete `/auth/token` API.
         */
        public Builder ticket(@Nonnull String ticket) {
            this.ticket = Utils.checkNotNull(ticket, "ticket");
            return this;
        }

        /**
         * The reason of the failure of the token request.
         */
        public Builder reason(@Nonnull AuthTokenFailApiReason reason) {
            this.reason = Utils.checkNotNull(reason, "reason");
            return this;
        }

        public AuthTokenFailApiRequestBody build() {
            return new AuthTokenFailApiRequestBody(
                ticket, reason);
        }

    }
}
