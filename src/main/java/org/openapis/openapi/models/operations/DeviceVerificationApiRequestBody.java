/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nonnull;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;


public class DeviceVerificationApiRequestBody {
    /**
     * A user code.
     */
    @JsonProperty("userCode")
    private String userCode;

    @JsonCreator
    public DeviceVerificationApiRequestBody(
            @JsonProperty("userCode") @Nonnull String userCode) {
        this.userCode = Optional.ofNullable(userCode)
            .orElseThrow(() -> new IllegalArgumentException("userCode cannot be null"));
    }

    /**
     * A user code.
     */
    public String userCode() {
        return this.userCode;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * A user code.
     */
    public DeviceVerificationApiRequestBody withUserCode(@Nonnull String userCode) {
        this.userCode = Utils.checkNotNull(userCode, "userCode");
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeviceVerificationApiRequestBody other = (DeviceVerificationApiRequestBody) o;
        return 
            Utils.enhancedDeepEquals(this.userCode, other.userCode);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            userCode);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DeviceVerificationApiRequestBody.class,
                "userCode", userCode);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String userCode;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * A user code.
         */
        public Builder userCode(@Nonnull String userCode) {
            this.userCode = Utils.checkNotNull(userCode, "userCode");
            return this;
        }

        public DeviceVerificationApiRequestBody build() {
            return new DeviceVerificationApiRequestBody(
                userCode);
        }

    }
}
