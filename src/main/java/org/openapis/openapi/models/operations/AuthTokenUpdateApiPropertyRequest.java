/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;


public class AuthTokenUpdateApiPropertyRequest {
    /**
     * The key part.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    private String key;

    /**
     * The value part.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    private String value;

    /**
     * The flag to indicate whether this property hidden from or visible to client applications.
     * If `true`, this property is hidden from client applications. Otherwise, this property is visible to client applications.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hidden")
    private Boolean hidden;

    @JsonCreator
    public AuthTokenUpdateApiPropertyRequest(
            @JsonProperty("key") @Nullable String key,
            @JsonProperty("value") @Nullable String value,
            @JsonProperty("hidden") @Nullable Boolean hidden) {
        this.key = key;
        this.value = value;
        this.hidden = hidden;
    }
    
    public AuthTokenUpdateApiPropertyRequest() {
        this(null, null, null);
    }

    /**
     * The key part.
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * The value part.
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    /**
     * The flag to indicate whether this property hidden from or visible to client applications.
     * If `true`, this property is hidden from client applications. Otherwise, this property is visible to client applications.
     */
    public Optional<Boolean> hidden() {
        return Optional.ofNullable(this.hidden);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The key part.
     */
    public AuthTokenUpdateApiPropertyRequest withKey(@Nullable String key) {
        this.key = key;
        return this;
    }


    /**
     * The value part.
     */
    public AuthTokenUpdateApiPropertyRequest withValue(@Nullable String value) {
        this.value = value;
        return this;
    }


    /**
     * The flag to indicate whether this property hidden from or visible to client applications.
     * If `true`, this property is hidden from client applications. Otherwise, this property is visible to client applications.
     */
    public AuthTokenUpdateApiPropertyRequest withHidden(@Nullable Boolean hidden) {
        this.hidden = hidden;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AuthTokenUpdateApiPropertyRequest other = (AuthTokenUpdateApiPropertyRequest) o;
        return 
            Utils.enhancedDeepEquals(this.key, other.key) &&
            Utils.enhancedDeepEquals(this.value, other.value) &&
            Utils.enhancedDeepEquals(this.hidden, other.hidden);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            key, value, hidden);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AuthTokenUpdateApiPropertyRequest.class,
                "key", key,
                "value", value,
                "hidden", hidden);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String key;

        private String value;

        private Boolean hidden;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The key part.
         */
        public Builder key(@Nullable String key) {
            this.key = key;
            return this;
        }

        /**
         * The value part.
         */
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }

        /**
         * The flag to indicate whether this property hidden from or visible to client applications.
         * If `true`, this property is hidden from client applications. Otherwise, this property is visible to client applications.
         */
        public Builder hidden(@Nullable Boolean hidden) {
            this.hidden = hidden;
            return this;
        }

        public AuthTokenUpdateApiPropertyRequest build() {
            return new AuthTokenUpdateApiPropertyRequest(
                key, value, hidden);
        }

    }
}
