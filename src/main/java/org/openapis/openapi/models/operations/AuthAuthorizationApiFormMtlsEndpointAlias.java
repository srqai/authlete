/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;


public class AuthAuthorizationApiFormMtlsEndpointAlias {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    private String name;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uri")
    private String uri;

    @JsonCreator
    public AuthAuthorizationApiFormMtlsEndpointAlias(
            @JsonProperty("name") @Nullable String name,
            @JsonProperty("uri") @Nullable String uri) {
        this.name = name;
        this.uri = uri;
    }
    
    public AuthAuthorizationApiFormMtlsEndpointAlias() {
        this(null, null);
    }

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    public Optional<String> uri() {
        return Optional.ofNullable(this.uri);
    }

    public static Builder builder() {
        return new Builder();
    }


    public AuthAuthorizationApiFormMtlsEndpointAlias withName(@Nullable String name) {
        this.name = name;
        return this;
    }


    public AuthAuthorizationApiFormMtlsEndpointAlias withUri(@Nullable String uri) {
        this.uri = uri;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AuthAuthorizationApiFormMtlsEndpointAlias other = (AuthAuthorizationApiFormMtlsEndpointAlias) o;
        return 
            Utils.enhancedDeepEquals(this.name, other.name) &&
            Utils.enhancedDeepEquals(this.uri, other.uri);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            name, uri);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AuthAuthorizationApiFormMtlsEndpointAlias.class,
                "name", name,
                "uri", uri);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String name;

        private String uri;

        private Builder() {
          // force use of static builder() method
        }

        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder uri(@Nullable String uri) {
            this.uri = uri;
            return this;
        }

        public AuthAuthorizationApiFormMtlsEndpointAlias build() {
            return new AuthAuthorizationApiFormMtlsEndpointAlias(
                name, uri);
        }

    }
}
