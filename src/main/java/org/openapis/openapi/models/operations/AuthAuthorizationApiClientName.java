/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;


public class AuthAuthorizationApiClientName {
    /**
     * The language tag part.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tag")
    private String tag;

    /**
     * The value part.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    private String value;

    @JsonCreator
    public AuthAuthorizationApiClientName(
            @JsonProperty("tag") @Nullable String tag,
            @JsonProperty("value") @Nullable String value) {
        this.tag = tag;
        this.value = value;
    }
    
    public AuthAuthorizationApiClientName() {
        this(null, null);
    }

    /**
     * The language tag part.
     */
    public Optional<String> tag() {
        return Optional.ofNullable(this.tag);
    }

    /**
     * The value part.
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The language tag part.
     */
    public AuthAuthorizationApiClientName withTag(@Nullable String tag) {
        this.tag = tag;
        return this;
    }


    /**
     * The value part.
     */
    public AuthAuthorizationApiClientName withValue(@Nullable String value) {
        this.value = value;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AuthAuthorizationApiClientName other = (AuthAuthorizationApiClientName) o;
        return 
            Utils.enhancedDeepEquals(this.tag, other.tag) &&
            Utils.enhancedDeepEquals(this.value, other.value);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            tag, value);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AuthAuthorizationApiClientName.class,
                "tag", tag,
                "value", value);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String tag;

        private String value;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The language tag part.
         */
        public Builder tag(@Nullable String tag) {
            this.tag = tag;
            return this;
        }

        /**
         * The value part.
         */
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }

        public AuthAuthorizationApiClientName build() {
            return new AuthAuthorizationApiClientName(
                tag, value);
        }

    }
}
