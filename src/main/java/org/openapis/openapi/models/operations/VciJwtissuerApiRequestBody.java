/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import org.openapis.openapi.utils.Utils;


public class VciJwtissuerApiRequestBody {
    /**
     * The flag indicating whether the metadata is written in the pretty
     * format or not.
     */
    @JsonProperty("pretty")
    private boolean pretty;

    @JsonCreator
    public VciJwtissuerApiRequestBody(
            @JsonProperty("pretty") boolean pretty) {
        this.pretty = pretty;
    }

    /**
     * The flag indicating whether the metadata is written in the pretty
     * format or not.
     */
    public boolean pretty() {
        return this.pretty;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The flag indicating whether the metadata is written in the pretty
     * format or not.
     */
    public VciJwtissuerApiRequestBody withPretty(boolean pretty) {
        this.pretty = pretty;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VciJwtissuerApiRequestBody other = (VciJwtissuerApiRequestBody) o;
        return 
            Utils.enhancedDeepEquals(this.pretty, other.pretty);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            pretty);
    }
    
    @Override
    public String toString() {
        return Utils.toString(VciJwtissuerApiRequestBody.class,
                "pretty", pretty);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private boolean pretty;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The flag indicating whether the metadata is written in the pretty
         * format or not.
         */
        public Builder pretty(boolean pretty) {
            this.pretty = pretty;
            return this;
        }

        public VciJwtissuerApiRequestBody build() {
            return new VciJwtissuerApiRequestBody(
                pretty);
        }

    }
}
