/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;


public class BackchannelAuthenticationApiFormGrant {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scopes")
    private List<BackchannelAuthenticationApiFormGrantScope> scopes;

    /**
     * The claims associated with the Grant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("claims")
    private List<String> claims;

    /**
     * The authorization details. This represents the value of the `authorization_details`
     * request parameter in the preceding device authorization request which is defined in
     * "OAuth 2.0 Rich Authorization Requests".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizationDetails")
    private BackchannelAuthenticationApiFormGrantAuthorizationDetails authorizationDetails;

    @JsonCreator
    public BackchannelAuthenticationApiFormGrant(
            @JsonProperty("scopes") @Nullable List<BackchannelAuthenticationApiFormGrantScope> scopes,
            @JsonProperty("claims") @Nullable List<String> claims,
            @JsonProperty("authorizationDetails") @Nullable BackchannelAuthenticationApiFormGrantAuthorizationDetails authorizationDetails) {
        this.scopes = scopes;
        this.claims = claims;
        this.authorizationDetails = authorizationDetails;
    }
    
    public BackchannelAuthenticationApiFormGrant() {
        this(null, null, null);
    }

    public Optional<List<BackchannelAuthenticationApiFormGrantScope>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    /**
     * The claims associated with the Grant.
     */
    public Optional<List<String>> claims() {
        return Optional.ofNullable(this.claims);
    }

    /**
     * The authorization details. This represents the value of the `authorization_details`
     * request parameter in the preceding device authorization request which is defined in
     * "OAuth 2.0 Rich Authorization Requests".
     */
    public Optional<BackchannelAuthenticationApiFormGrantAuthorizationDetails> authorizationDetails() {
        return Optional.ofNullable(this.authorizationDetails);
    }

    public static Builder builder() {
        return new Builder();
    }


    public BackchannelAuthenticationApiFormGrant withScopes(@Nullable List<BackchannelAuthenticationApiFormGrantScope> scopes) {
        this.scopes = scopes;
        return this;
    }


    /**
     * The claims associated with the Grant.
     */
    public BackchannelAuthenticationApiFormGrant withClaims(@Nullable List<String> claims) {
        this.claims = claims;
        return this;
    }


    /**
     * The authorization details. This represents the value of the `authorization_details`
     * request parameter in the preceding device authorization request which is defined in
     * "OAuth 2.0 Rich Authorization Requests".
     */
    public BackchannelAuthenticationApiFormGrant withAuthorizationDetails(@Nullable BackchannelAuthenticationApiFormGrantAuthorizationDetails authorizationDetails) {
        this.authorizationDetails = authorizationDetails;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BackchannelAuthenticationApiFormGrant other = (BackchannelAuthenticationApiFormGrant) o;
        return 
            Utils.enhancedDeepEquals(this.scopes, other.scopes) &&
            Utils.enhancedDeepEquals(this.claims, other.claims) &&
            Utils.enhancedDeepEquals(this.authorizationDetails, other.authorizationDetails);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            scopes, claims, authorizationDetails);
    }
    
    @Override
    public String toString() {
        return Utils.toString(BackchannelAuthenticationApiFormGrant.class,
                "scopes", scopes,
                "claims", claims,
                "authorizationDetails", authorizationDetails);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private List<BackchannelAuthenticationApiFormGrantScope> scopes;

        private List<String> claims;

        private BackchannelAuthenticationApiFormGrantAuthorizationDetails authorizationDetails;

        private Builder() {
          // force use of static builder() method
        }

        public Builder scopes(@Nullable List<BackchannelAuthenticationApiFormGrantScope> scopes) {
            this.scopes = scopes;
            return this;
        }

        /**
         * The claims associated with the Grant.
         */
        public Builder claims(@Nullable List<String> claims) {
            this.claims = claims;
            return this;
        }

        /**
         * The authorization details. This represents the value of the `authorization_details`
         * request parameter in the preceding device authorization request which is defined in
         * "OAuth 2.0 Rich Authorization Requests".
         */
        public Builder authorizationDetails(@Nullable BackchannelAuthenticationApiFormGrantAuthorizationDetails authorizationDetails) {
            this.authorizationDetails = authorizationDetails;
            return this;
        }

        public BackchannelAuthenticationApiFormGrant build() {
            return new BackchannelAuthenticationApiFormGrant(
                scopes, claims, authorizationDetails);
        }

    }
}
