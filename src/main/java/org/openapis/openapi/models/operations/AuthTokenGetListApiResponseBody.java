/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;


public class AuthTokenGetListApiResponseBody {
    /**
     * Start index of search results (inclusive).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start")
    private Integer start;

    /**
     * End index of search results (exclusive).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("end")
    private Integer end;

    /**
     * Unique ID of a client developer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalCount")
    private Integer totalCount;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client")
    private AuthTokenGetListApiClient client;

    /**
     * Unique user ID of an end-user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subject")
    private String subject;

    /**
     * An array of access tokens.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessTokens")
    private List<AccessToken> accessTokens;

    @JsonCreator
    public AuthTokenGetListApiResponseBody(
            @JsonProperty("start") @Nullable Integer start,
            @JsonProperty("end") @Nullable Integer end,
            @JsonProperty("totalCount") @Nullable Integer totalCount,
            @JsonProperty("client") @Nullable AuthTokenGetListApiClient client,
            @JsonProperty("subject") @Nullable String subject,
            @JsonProperty("accessTokens") @Nullable List<AccessToken> accessTokens) {
        this.start = start;
        this.end = end;
        this.totalCount = totalCount;
        this.client = client;
        this.subject = subject;
        this.accessTokens = accessTokens;
    }
    
    public AuthTokenGetListApiResponseBody() {
        this(null, null, null,
            null, null, null);
    }

    /**
     * Start index of search results (inclusive).
     */
    public Optional<Integer> start() {
        return Optional.ofNullable(this.start);
    }

    /**
     * End index of search results (exclusive).
     */
    public Optional<Integer> end() {
        return Optional.ofNullable(this.end);
    }

    /**
     * Unique ID of a client developer.
     */
    public Optional<Integer> totalCount() {
        return Optional.ofNullable(this.totalCount);
    }

    public Optional<AuthTokenGetListApiClient> client() {
        return Optional.ofNullable(this.client);
    }

    /**
     * Unique user ID of an end-user.
     */
    public Optional<String> subject() {
        return Optional.ofNullable(this.subject);
    }

    /**
     * An array of access tokens.
     */
    public Optional<List<AccessToken>> accessTokens() {
        return Optional.ofNullable(this.accessTokens);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Start index of search results (inclusive).
     */
    public AuthTokenGetListApiResponseBody withStart(@Nullable Integer start) {
        this.start = start;
        return this;
    }


    /**
     * End index of search results (exclusive).
     */
    public AuthTokenGetListApiResponseBody withEnd(@Nullable Integer end) {
        this.end = end;
        return this;
    }


    /**
     * Unique ID of a client developer.
     */
    public AuthTokenGetListApiResponseBody withTotalCount(@Nullable Integer totalCount) {
        this.totalCount = totalCount;
        return this;
    }


    public AuthTokenGetListApiResponseBody withClient(@Nullable AuthTokenGetListApiClient client) {
        this.client = client;
        return this;
    }


    /**
     * Unique user ID of an end-user.
     */
    public AuthTokenGetListApiResponseBody withSubject(@Nullable String subject) {
        this.subject = subject;
        return this;
    }


    /**
     * An array of access tokens.
     */
    public AuthTokenGetListApiResponseBody withAccessTokens(@Nullable List<AccessToken> accessTokens) {
        this.accessTokens = accessTokens;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AuthTokenGetListApiResponseBody other = (AuthTokenGetListApiResponseBody) o;
        return 
            Utils.enhancedDeepEquals(this.start, other.start) &&
            Utils.enhancedDeepEquals(this.end, other.end) &&
            Utils.enhancedDeepEquals(this.totalCount, other.totalCount) &&
            Utils.enhancedDeepEquals(this.client, other.client) &&
            Utils.enhancedDeepEquals(this.subject, other.subject) &&
            Utils.enhancedDeepEquals(this.accessTokens, other.accessTokens);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            start, end, totalCount,
            client, subject, accessTokens);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AuthTokenGetListApiResponseBody.class,
                "start", start,
                "end", end,
                "totalCount", totalCount,
                "client", client,
                "subject", subject,
                "accessTokens", accessTokens);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Integer start;

        private Integer end;

        private Integer totalCount;

        private AuthTokenGetListApiClient client;

        private String subject;

        private List<AccessToken> accessTokens;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Start index of search results (inclusive).
         */
        public Builder start(@Nullable Integer start) {
            this.start = start;
            return this;
        }

        /**
         * End index of search results (exclusive).
         */
        public Builder end(@Nullable Integer end) {
            this.end = end;
            return this;
        }

        /**
         * Unique ID of a client developer.
         */
        public Builder totalCount(@Nullable Integer totalCount) {
            this.totalCount = totalCount;
            return this;
        }

        public Builder client(@Nullable AuthTokenGetListApiClient client) {
            this.client = client;
            return this;
        }

        /**
         * Unique user ID of an end-user.
         */
        public Builder subject(@Nullable String subject) {
            this.subject = subject;
            return this;
        }

        /**
         * An array of access tokens.
         */
        public Builder accessTokens(@Nullable List<AccessToken> accessTokens) {
            this.accessTokens = accessTokens;
            return this;
        }

        public AuthTokenGetListApiResponseBody build() {
            return new AuthTokenGetListApiResponseBody(
                start, end, totalCount,
                client, subject, accessTokens);
        }

    }
}
