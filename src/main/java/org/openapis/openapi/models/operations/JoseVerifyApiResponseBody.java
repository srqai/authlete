/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;


public class JoseVerifyApiResponseBody {
    /**
     * The code which represents the result of the API call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resultCode")
    private String resultCode;

    /**
     * A short message which explains the result of the API call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resultMessage")
    private String resultMessage;

    /**
     * The result of the verification on the JOSE object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("valid")
    private Boolean valid;

    /**
     * The result of the signature verification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("signatureValid")
    private Boolean signatureValid;

    /**
     * The list of missing claims.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("missingClaims")
    private List<String> missingClaims;

    /**
     * The list of invalid claims.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invalidClaims")
    private List<String> invalidClaims;

    /**
     * The list of error messages.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorDescriptions")
    private List<String> errorDescriptions;

    @JsonCreator
    public JoseVerifyApiResponseBody(
            @JsonProperty("resultCode") @Nullable String resultCode,
            @JsonProperty("resultMessage") @Nullable String resultMessage,
            @JsonProperty("valid") @Nullable Boolean valid,
            @JsonProperty("signatureValid") @Nullable Boolean signatureValid,
            @JsonProperty("missingClaims") @Nullable List<String> missingClaims,
            @JsonProperty("invalidClaims") @Nullable List<String> invalidClaims,
            @JsonProperty("errorDescriptions") @Nullable List<String> errorDescriptions) {
        this.resultCode = resultCode;
        this.resultMessage = resultMessage;
        this.valid = valid;
        this.signatureValid = signatureValid;
        this.missingClaims = missingClaims;
        this.invalidClaims = invalidClaims;
        this.errorDescriptions = errorDescriptions;
    }
    
    public JoseVerifyApiResponseBody() {
        this(null, null, null,
            null, null, null,
            null);
    }

    /**
     * The code which represents the result of the API call.
     */
    public Optional<String> resultCode() {
        return Optional.ofNullable(this.resultCode);
    }

    /**
     * A short message which explains the result of the API call.
     */
    public Optional<String> resultMessage() {
        return Optional.ofNullable(this.resultMessage);
    }

    /**
     * The result of the verification on the JOSE object.
     */
    public Optional<Boolean> valid() {
        return Optional.ofNullable(this.valid);
    }

    /**
     * The result of the signature verification.
     */
    public Optional<Boolean> signatureValid() {
        return Optional.ofNullable(this.signatureValid);
    }

    /**
     * The list of missing claims.
     */
    public Optional<List<String>> missingClaims() {
        return Optional.ofNullable(this.missingClaims);
    }

    /**
     * The list of invalid claims.
     */
    public Optional<List<String>> invalidClaims() {
        return Optional.ofNullable(this.invalidClaims);
    }

    /**
     * The list of error messages.
     */
    public Optional<List<String>> errorDescriptions() {
        return Optional.ofNullable(this.errorDescriptions);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The code which represents the result of the API call.
     */
    public JoseVerifyApiResponseBody withResultCode(@Nullable String resultCode) {
        this.resultCode = resultCode;
        return this;
    }


    /**
     * A short message which explains the result of the API call.
     */
    public JoseVerifyApiResponseBody withResultMessage(@Nullable String resultMessage) {
        this.resultMessage = resultMessage;
        return this;
    }


    /**
     * The result of the verification on the JOSE object.
     */
    public JoseVerifyApiResponseBody withValid(@Nullable Boolean valid) {
        this.valid = valid;
        return this;
    }


    /**
     * The result of the signature verification.
     */
    public JoseVerifyApiResponseBody withSignatureValid(@Nullable Boolean signatureValid) {
        this.signatureValid = signatureValid;
        return this;
    }


    /**
     * The list of missing claims.
     */
    public JoseVerifyApiResponseBody withMissingClaims(@Nullable List<String> missingClaims) {
        this.missingClaims = missingClaims;
        return this;
    }


    /**
     * The list of invalid claims.
     */
    public JoseVerifyApiResponseBody withInvalidClaims(@Nullable List<String> invalidClaims) {
        this.invalidClaims = invalidClaims;
        return this;
    }


    /**
     * The list of error messages.
     */
    public JoseVerifyApiResponseBody withErrorDescriptions(@Nullable List<String> errorDescriptions) {
        this.errorDescriptions = errorDescriptions;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        JoseVerifyApiResponseBody other = (JoseVerifyApiResponseBody) o;
        return 
            Utils.enhancedDeepEquals(this.resultCode, other.resultCode) &&
            Utils.enhancedDeepEquals(this.resultMessage, other.resultMessage) &&
            Utils.enhancedDeepEquals(this.valid, other.valid) &&
            Utils.enhancedDeepEquals(this.signatureValid, other.signatureValid) &&
            Utils.enhancedDeepEquals(this.missingClaims, other.missingClaims) &&
            Utils.enhancedDeepEquals(this.invalidClaims, other.invalidClaims) &&
            Utils.enhancedDeepEquals(this.errorDescriptions, other.errorDescriptions);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            resultCode, resultMessage, valid,
            signatureValid, missingClaims, invalidClaims,
            errorDescriptions);
    }
    
    @Override
    public String toString() {
        return Utils.toString(JoseVerifyApiResponseBody.class,
                "resultCode", resultCode,
                "resultMessage", resultMessage,
                "valid", valid,
                "signatureValid", signatureValid,
                "missingClaims", missingClaims,
                "invalidClaims", invalidClaims,
                "errorDescriptions", errorDescriptions);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String resultCode;

        private String resultMessage;

        private Boolean valid;

        private Boolean signatureValid;

        private List<String> missingClaims;

        private List<String> invalidClaims;

        private List<String> errorDescriptions;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The code which represents the result of the API call.
         */
        public Builder resultCode(@Nullable String resultCode) {
            this.resultCode = resultCode;
            return this;
        }

        /**
         * A short message which explains the result of the API call.
         */
        public Builder resultMessage(@Nullable String resultMessage) {
            this.resultMessage = resultMessage;
            return this;
        }

        /**
         * The result of the verification on the JOSE object.
         */
        public Builder valid(@Nullable Boolean valid) {
            this.valid = valid;
            return this;
        }

        /**
         * The result of the signature verification.
         */
        public Builder signatureValid(@Nullable Boolean signatureValid) {
            this.signatureValid = signatureValid;
            return this;
        }

        /**
         * The list of missing claims.
         */
        public Builder missingClaims(@Nullable List<String> missingClaims) {
            this.missingClaims = missingClaims;
            return this;
        }

        /**
         * The list of invalid claims.
         */
        public Builder invalidClaims(@Nullable List<String> invalidClaims) {
            this.invalidClaims = invalidClaims;
            return this;
        }

        /**
         * The list of error messages.
         */
        public Builder errorDescriptions(@Nullable List<String> errorDescriptions) {
            this.errorDescriptions = errorDescriptions;
            return this;
        }

        public JoseVerifyApiResponseBody build() {
            return new JoseVerifyApiResponseBody(
                resultCode, resultMessage, valid,
                signatureValid, missingClaims, invalidClaims,
                errorDescriptions);
        }

    }
}
