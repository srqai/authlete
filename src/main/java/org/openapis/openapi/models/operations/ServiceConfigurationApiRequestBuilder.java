/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import static org.openapis.openapi.operations.Operations.RequestOperation;

import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Exception;
import java.lang.String;
import org.openapis.openapi.SDKConfiguration;
import org.openapis.openapi.operations.ServiceConfigurationApiOperation;
import org.openapis.openapi.utils.Utils;

public class ServiceConfigurationApiRequestBuilder {
    private final SDKConfiguration sdkConfiguration;
    private final ServiceConfigurationApiRequest.Builder pojoBuilder;
    private ServiceConfigurationApiRequest request;
    private String serverURL;
    private boolean _setterCalled;

    public ServiceConfigurationApiRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.pojoBuilder = ServiceConfigurationApiRequest.builder();
    }

    public ServiceConfigurationApiRequestBuilder pretty(@Nullable Boolean pretty) {
        this.pojoBuilder.pretty(pretty);
        this._setterCalled = true;
        return this;
    }

    public ServiceConfigurationApiRequestBuilder patch(@Nullable String patch) {
        this.pojoBuilder.patch(patch);
        this._setterCalled = true;
        return this;
    }

    public ServiceConfigurationApiRequestBuilder serviceId(@Nonnull String serviceId) {
        this.pojoBuilder.serviceId(serviceId);
        this._setterCalled = true;
        return this;
    }

    public ServiceConfigurationApiRequestBuilder serverURL(@Nullable String serverURL) {
        this.serverURL = serverURL;
        return this;
    }

    private ServiceConfigurationApiRequest _buildRequest() {
        if (this._setterCalled) {
            this.request = this.pojoBuilder.build();
        }
        return this.request;
    }
    /**
    * Executes the request and returns the response.
    *
    * @return The response from the server.
    */
    public ServiceConfigurationApiResponse call() throws Exception {
        RequestOperation<ServiceConfigurationApiRequest, ServiceConfigurationApiResponse> operation
              = new ServiceConfigurationApiOperation(sdkConfiguration, serverURL);

        return operation.handleResponse(operation.doRequest(this._buildRequest()));
    }
}
