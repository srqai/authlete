/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;


public class VciBatchParseApiFormInfo {
    /**
     * The identifier of the credential offer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("identifier")
    private String identifier;

    /**
     * The value of the format parameter in the credential request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("format")
    private String format;

    /**
     * The binding key specified by the proof in the credential request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bindingKey")
    private String bindingKey;

    /**
     * The details about the credential request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("details")
    private String details;

    @JsonCreator
    public VciBatchParseApiFormInfo(
            @JsonProperty("identifier") @Nullable String identifier,
            @JsonProperty("format") @Nullable String format,
            @JsonProperty("bindingKey") @Nullable String bindingKey,
            @JsonProperty("details") @Nullable String details) {
        this.identifier = identifier;
        this.format = format;
        this.bindingKey = bindingKey;
        this.details = details;
    }
    
    public VciBatchParseApiFormInfo() {
        this(null, null, null,
            null);
    }

    /**
     * The identifier of the credential offer.
     */
    public Optional<String> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    /**
     * The value of the format parameter in the credential request.
     */
    public Optional<String> format() {
        return Optional.ofNullable(this.format);
    }

    /**
     * The binding key specified by the proof in the credential request.
     */
    public Optional<String> bindingKey() {
        return Optional.ofNullable(this.bindingKey);
    }

    /**
     * The details about the credential request.
     */
    public Optional<String> details() {
        return Optional.ofNullable(this.details);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The identifier of the credential offer.
     */
    public VciBatchParseApiFormInfo withIdentifier(@Nullable String identifier) {
        this.identifier = identifier;
        return this;
    }


    /**
     * The value of the format parameter in the credential request.
     */
    public VciBatchParseApiFormInfo withFormat(@Nullable String format) {
        this.format = format;
        return this;
    }


    /**
     * The binding key specified by the proof in the credential request.
     */
    public VciBatchParseApiFormInfo withBindingKey(@Nullable String bindingKey) {
        this.bindingKey = bindingKey;
        return this;
    }


    /**
     * The details about the credential request.
     */
    public VciBatchParseApiFormInfo withDetails(@Nullable String details) {
        this.details = details;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VciBatchParseApiFormInfo other = (VciBatchParseApiFormInfo) o;
        return 
            Utils.enhancedDeepEquals(this.identifier, other.identifier) &&
            Utils.enhancedDeepEquals(this.format, other.format) &&
            Utils.enhancedDeepEquals(this.bindingKey, other.bindingKey) &&
            Utils.enhancedDeepEquals(this.details, other.details);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            identifier, format, bindingKey,
            details);
    }
    
    @Override
    public String toString() {
        return Utils.toString(VciBatchParseApiFormInfo.class,
                "identifier", identifier,
                "format", format,
                "bindingKey", bindingKey,
                "details", details);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String identifier;

        private String format;

        private String bindingKey;

        private String details;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The identifier of the credential offer.
         */
        public Builder identifier(@Nullable String identifier) {
            this.identifier = identifier;
            return this;
        }

        /**
         * The value of the format parameter in the credential request.
         */
        public Builder format(@Nullable String format) {
            this.format = format;
            return this;
        }

        /**
         * The binding key specified by the proof in the credential request.
         */
        public Builder bindingKey(@Nullable String bindingKey) {
            this.bindingKey = bindingKey;
            return this;
        }

        /**
         * The details about the credential request.
         */
        public Builder details(@Nullable String details) {
            this.details = details;
            return this;
        }

        public VciBatchParseApiFormInfo build() {
            return new VciBatchParseApiFormInfo(
                identifier, format, bindingKey,
                details);
        }

    }
}
