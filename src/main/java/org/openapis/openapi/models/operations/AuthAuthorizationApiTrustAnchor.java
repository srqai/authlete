/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;


public class AuthAuthorizationApiTrustAnchor {
    /**
     * the entity ID of the trust anchor
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entityId")
    private String entityId;

    /**
     * the JWK Set document containing public keys of the trust anchor
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jwks")
    private String jwks;

    @JsonCreator
    public AuthAuthorizationApiTrustAnchor(
            @JsonProperty("entityId") @Nullable String entityId,
            @JsonProperty("jwks") @Nullable String jwks) {
        this.entityId = entityId;
        this.jwks = jwks;
    }
    
    public AuthAuthorizationApiTrustAnchor() {
        this(null, null);
    }

    /**
     * the entity ID of the trust anchor
     */
    public Optional<String> entityId() {
        return Optional.ofNullable(this.entityId);
    }

    /**
     * the JWK Set document containing public keys of the trust anchor
     */
    public Optional<String> jwks() {
        return Optional.ofNullable(this.jwks);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * the entity ID of the trust anchor
     */
    public AuthAuthorizationApiTrustAnchor withEntityId(@Nullable String entityId) {
        this.entityId = entityId;
        return this;
    }


    /**
     * the JWK Set document containing public keys of the trust anchor
     */
    public AuthAuthorizationApiTrustAnchor withJwks(@Nullable String jwks) {
        this.jwks = jwks;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AuthAuthorizationApiTrustAnchor other = (AuthAuthorizationApiTrustAnchor) o;
        return 
            Utils.enhancedDeepEquals(this.entityId, other.entityId) &&
            Utils.enhancedDeepEquals(this.jwks, other.jwks);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            entityId, jwks);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AuthAuthorizationApiTrustAnchor.class,
                "entityId", entityId,
                "jwks", jwks);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String entityId;

        private String jwks;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * the entity ID of the trust anchor
         */
        public Builder entityId(@Nullable String entityId) {
            this.entityId = entityId;
            return this;
        }

        /**
         * the JWK Set document containing public keys of the trust anchor
         */
        public Builder jwks(@Nullable String jwks) {
            this.jwks = jwks;
            return this;
        }

        public AuthAuthorizationApiTrustAnchor build() {
            return new AuthAuthorizationApiTrustAnchor(
                entityId, jwks);
        }

    }
}
