/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapis.openapi.models.components.ClientTypeProperties;
import org.openapis.openapi.models.components.TaggedValue;
import org.openapis.openapi.utils.Utils;


public class AuthAuthorizationApiClient {
    /**
     * The sequential number of the client. The value of this property is assigned by Authlete.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    private Integer number;

    /**
     * The name of the client application. This property corresponds to `client_name` in
     * [OpenID Connect Dynamic Client Registration 1.0, 2. Client Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientName")
    private String clientName;

    /**
     * Client names with language tags. If the client application has different names for different
     * languages, this property can be used to register the names.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientNames")
    private List<TaggedValue> clientNames;

    /**
     * The description about the client application.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    private String description;

    /**
     * Descriptions about the client application with language tags. If the client application has different
     * descriptions for different languages, this property can be used to register the descriptions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("descriptions")
    private List<TaggedValue> descriptions;

    /**
     * The client identifier used in Authlete API calls. The value of this property is assigned by Authlete.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientId")
    private Long clientId;

    /**
     * The value of the client's `client_id` property used in OAuth and OpenID Connect calls. By
     * default, this is a string version of the `clientId` property.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientIdAlias")
    private String clientIdAlias;

    /**
     * Deprecated. Always set to `true`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientIdAliasEnabled")
    private Boolean clientIdAliasEnabled;

    /**
     * The client type, either `CONFIDENTIAL` or `PUBLIC`. See [RFC 6749, 2.1. Client Types](https://datatracker.ietf.org/doc/html/rfc6749#section-2.1)
     * for details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientType")
    private ClientTypeProperties clientType;

    /**
     * The URL pointing to the logo image of the client application.
     * 
     * <p>This property corresponds to `logo_uri` in [OpenID Connect Dynamic Client Registration 1.0, 2.
     * Client Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logoUri")
    private String logoUri;

    /**
     * Logo image URLs with language tags. If the client application has different logo images for
     * different languages, this property can be used to register URLs of the images.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logoUris")
    private List<TaggedValue> logoUris;

    /**
     * The URL pointing to the "Terms Of Service" page.
     * 
     * <p>This property corresponds to `tos_uri` in
     * [OpenID Connect Dynamic Client Registration 1.0, 2. Client Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tosUri")
    private String tosUri;

    /**
     * URLs of "Terms Of Service" pages with language tags.
     * 
     * <p>If the client application has different "Terms Of Service" pages for different languages,
     * this property can be used to register the URLs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tosUris")
    private List<TaggedValue> tosUris;

    /**
     * The URL pointing to the page which describes the policy as to how end-user's profile data is used.
     * 
     * <p>This property corresponds to `policy_uri` in
     * [OpenID Connect Dynamic Client Registration 1.0, 2. Client Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policyUri")
    private String policyUri;

    /**
     * URLs of policy pages with language tags.
     * If the client application has different policy pages for different languages, this property can be used to register the URLs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policyUris")
    private List<TaggedValue> policyUris;

    @JsonCreator
    public AuthAuthorizationApiClient(
            @JsonProperty("number") @Nullable Integer number,
            @JsonProperty("clientName") @Nullable String clientName,
            @JsonProperty("clientNames") @Nullable List<TaggedValue> clientNames,
            @JsonProperty("description") @Nullable String description,
            @JsonProperty("descriptions") @Nullable List<TaggedValue> descriptions,
            @JsonProperty("clientId") @Nullable Long clientId,
            @JsonProperty("clientIdAlias") @Nullable String clientIdAlias,
            @JsonProperty("clientIdAliasEnabled") @Nullable Boolean clientIdAliasEnabled,
            @JsonProperty("clientType") @Nullable ClientTypeProperties clientType,
            @JsonProperty("logoUri") @Nullable String logoUri,
            @JsonProperty("logoUris") @Nullable List<TaggedValue> logoUris,
            @JsonProperty("tosUri") @Nullable String tosUri,
            @JsonProperty("tosUris") @Nullable List<TaggedValue> tosUris,
            @JsonProperty("policyUri") @Nullable String policyUri,
            @JsonProperty("policyUris") @Nullable List<TaggedValue> policyUris) {
        this.number = number;
        this.clientName = clientName;
        this.clientNames = clientNames;
        this.description = description;
        this.descriptions = descriptions;
        this.clientId = clientId;
        this.clientIdAlias = clientIdAlias;
        this.clientIdAliasEnabled = clientIdAliasEnabled;
        this.clientType = clientType;
        this.logoUri = logoUri;
        this.logoUris = logoUris;
        this.tosUri = tosUri;
        this.tosUris = tosUris;
        this.policyUri = policyUri;
        this.policyUris = policyUris;
    }
    
    public AuthAuthorizationApiClient() {
        this(null, null, null,
            null, null, null,
            null, null, null,
            null, null, null,
            null, null, null);
    }

    /**
     * The sequential number of the client. The value of this property is assigned by Authlete.
     */
    public Optional<Integer> number() {
        return Optional.ofNullable(this.number);
    }

    /**
     * The name of the client application. This property corresponds to `client_name` in
     * [OpenID Connect Dynamic Client Registration 1.0, 2. Client Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
     */
    public Optional<String> clientName() {
        return Optional.ofNullable(this.clientName);
    }

    /**
     * Client names with language tags. If the client application has different names for different
     * languages, this property can be used to register the names.
     */
    public Optional<List<TaggedValue>> clientNames() {
        return Optional.ofNullable(this.clientNames);
    }

    /**
     * The description about the client application.
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Descriptions about the client application with language tags. If the client application has different
     * descriptions for different languages, this property can be used to register the descriptions.
     */
    public Optional<List<TaggedValue>> descriptions() {
        return Optional.ofNullable(this.descriptions);
    }

    /**
     * The client identifier used in Authlete API calls. The value of this property is assigned by Authlete.
     */
    public Optional<Long> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * The value of the client's `client_id` property used in OAuth and OpenID Connect calls. By
     * default, this is a string version of the `clientId` property.
     */
    public Optional<String> clientIdAlias() {
        return Optional.ofNullable(this.clientIdAlias);
    }

    /**
     * Deprecated. Always set to `true`.
     */
    public Optional<Boolean> clientIdAliasEnabled() {
        return Optional.ofNullable(this.clientIdAliasEnabled);
    }

    /**
     * The client type, either `CONFIDENTIAL` or `PUBLIC`. See [RFC 6749, 2.1. Client Types](https://datatracker.ietf.org/doc/html/rfc6749#section-2.1)
     * for details.
     */
    public Optional<ClientTypeProperties> clientType() {
        return Optional.ofNullable(this.clientType);
    }

    /**
     * The URL pointing to the logo image of the client application.
     * 
     * <p>This property corresponds to `logo_uri` in [OpenID Connect Dynamic Client Registration 1.0, 2.
     * Client Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
     */
    public Optional<String> logoUri() {
        return Optional.ofNullable(this.logoUri);
    }

    /**
     * Logo image URLs with language tags. If the client application has different logo images for
     * different languages, this property can be used to register URLs of the images.
     */
    public Optional<List<TaggedValue>> logoUris() {
        return Optional.ofNullable(this.logoUris);
    }

    /**
     * The URL pointing to the "Terms Of Service" page.
     * 
     * <p>This property corresponds to `tos_uri` in
     * [OpenID Connect Dynamic Client Registration 1.0, 2. Client Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
     */
    public Optional<String> tosUri() {
        return Optional.ofNullable(this.tosUri);
    }

    /**
     * URLs of "Terms Of Service" pages with language tags.
     * 
     * <p>If the client application has different "Terms Of Service" pages for different languages,
     * this property can be used to register the URLs.
     */
    public Optional<List<TaggedValue>> tosUris() {
        return Optional.ofNullable(this.tosUris);
    }

    /**
     * The URL pointing to the page which describes the policy as to how end-user's profile data is used.
     * 
     * <p>This property corresponds to `policy_uri` in
     * [OpenID Connect Dynamic Client Registration 1.0, 2. Client Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
     */
    public Optional<String> policyUri() {
        return Optional.ofNullable(this.policyUri);
    }

    /**
     * URLs of policy pages with language tags.
     * If the client application has different policy pages for different languages, this property can be used to register the URLs.
     */
    public Optional<List<TaggedValue>> policyUris() {
        return Optional.ofNullable(this.policyUris);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The sequential number of the client. The value of this property is assigned by Authlete.
     */
    public AuthAuthorizationApiClient withNumber(@Nullable Integer number) {
        this.number = number;
        return this;
    }


    /**
     * The name of the client application. This property corresponds to `client_name` in
     * [OpenID Connect Dynamic Client Registration 1.0, 2. Client Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
     */
    public AuthAuthorizationApiClient withClientName(@Nullable String clientName) {
        this.clientName = clientName;
        return this;
    }


    /**
     * Client names with language tags. If the client application has different names for different
     * languages, this property can be used to register the names.
     */
    public AuthAuthorizationApiClient withClientNames(@Nullable List<TaggedValue> clientNames) {
        this.clientNames = clientNames;
        return this;
    }


    /**
     * The description about the client application.
     */
    public AuthAuthorizationApiClient withDescription(@Nullable String description) {
        this.description = description;
        return this;
    }


    /**
     * Descriptions about the client application with language tags. If the client application has different
     * descriptions for different languages, this property can be used to register the descriptions.
     */
    public AuthAuthorizationApiClient withDescriptions(@Nullable List<TaggedValue> descriptions) {
        this.descriptions = descriptions;
        return this;
    }


    /**
     * The client identifier used in Authlete API calls. The value of this property is assigned by Authlete.
     */
    public AuthAuthorizationApiClient withClientId(@Nullable Long clientId) {
        this.clientId = clientId;
        return this;
    }


    /**
     * The value of the client's `client_id` property used in OAuth and OpenID Connect calls. By
     * default, this is a string version of the `clientId` property.
     */
    public AuthAuthorizationApiClient withClientIdAlias(@Nullable String clientIdAlias) {
        this.clientIdAlias = clientIdAlias;
        return this;
    }


    /**
     * Deprecated. Always set to `true`.
     */
    public AuthAuthorizationApiClient withClientIdAliasEnabled(@Nullable Boolean clientIdAliasEnabled) {
        this.clientIdAliasEnabled = clientIdAliasEnabled;
        return this;
    }


    /**
     * The client type, either `CONFIDENTIAL` or `PUBLIC`. See [RFC 6749, 2.1. Client Types](https://datatracker.ietf.org/doc/html/rfc6749#section-2.1)
     * for details.
     */
    public AuthAuthorizationApiClient withClientType(@Nullable ClientTypeProperties clientType) {
        this.clientType = clientType;
        return this;
    }


    /**
     * The URL pointing to the logo image of the client application.
     * 
     * <p>This property corresponds to `logo_uri` in [OpenID Connect Dynamic Client Registration 1.0, 2.
     * Client Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
     */
    public AuthAuthorizationApiClient withLogoUri(@Nullable String logoUri) {
        this.logoUri = logoUri;
        return this;
    }


    /**
     * Logo image URLs with language tags. If the client application has different logo images for
     * different languages, this property can be used to register URLs of the images.
     */
    public AuthAuthorizationApiClient withLogoUris(@Nullable List<TaggedValue> logoUris) {
        this.logoUris = logoUris;
        return this;
    }


    /**
     * The URL pointing to the "Terms Of Service" page.
     * 
     * <p>This property corresponds to `tos_uri` in
     * [OpenID Connect Dynamic Client Registration 1.0, 2. Client Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
     */
    public AuthAuthorizationApiClient withTosUri(@Nullable String tosUri) {
        this.tosUri = tosUri;
        return this;
    }


    /**
     * URLs of "Terms Of Service" pages with language tags.
     * 
     * <p>If the client application has different "Terms Of Service" pages for different languages,
     * this property can be used to register the URLs.
     */
    public AuthAuthorizationApiClient withTosUris(@Nullable List<TaggedValue> tosUris) {
        this.tosUris = tosUris;
        return this;
    }


    /**
     * The URL pointing to the page which describes the policy as to how end-user's profile data is used.
     * 
     * <p>This property corresponds to `policy_uri` in
     * [OpenID Connect Dynamic Client Registration 1.0, 2. Client Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
     */
    public AuthAuthorizationApiClient withPolicyUri(@Nullable String policyUri) {
        this.policyUri = policyUri;
        return this;
    }


    /**
     * URLs of policy pages with language tags.
     * If the client application has different policy pages for different languages, this property can be used to register the URLs.
     */
    public AuthAuthorizationApiClient withPolicyUris(@Nullable List<TaggedValue> policyUris) {
        this.policyUris = policyUris;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AuthAuthorizationApiClient other = (AuthAuthorizationApiClient) o;
        return 
            Utils.enhancedDeepEquals(this.number, other.number) &&
            Utils.enhancedDeepEquals(this.clientName, other.clientName) &&
            Utils.enhancedDeepEquals(this.clientNames, other.clientNames) &&
            Utils.enhancedDeepEquals(this.description, other.description) &&
            Utils.enhancedDeepEquals(this.descriptions, other.descriptions) &&
            Utils.enhancedDeepEquals(this.clientId, other.clientId) &&
            Utils.enhancedDeepEquals(this.clientIdAlias, other.clientIdAlias) &&
            Utils.enhancedDeepEquals(this.clientIdAliasEnabled, other.clientIdAliasEnabled) &&
            Utils.enhancedDeepEquals(this.clientType, other.clientType) &&
            Utils.enhancedDeepEquals(this.logoUri, other.logoUri) &&
            Utils.enhancedDeepEquals(this.logoUris, other.logoUris) &&
            Utils.enhancedDeepEquals(this.tosUri, other.tosUri) &&
            Utils.enhancedDeepEquals(this.tosUris, other.tosUris) &&
            Utils.enhancedDeepEquals(this.policyUri, other.policyUri) &&
            Utils.enhancedDeepEquals(this.policyUris, other.policyUris);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            number, clientName, clientNames,
            description, descriptions, clientId,
            clientIdAlias, clientIdAliasEnabled, clientType,
            logoUri, logoUris, tosUri,
            tosUris, policyUri, policyUris);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AuthAuthorizationApiClient.class,
                "number", number,
                "clientName", clientName,
                "clientNames", clientNames,
                "description", description,
                "descriptions", descriptions,
                "clientId", clientId,
                "clientIdAlias", clientIdAlias,
                "clientIdAliasEnabled", clientIdAliasEnabled,
                "clientType", clientType,
                "logoUri", logoUri,
                "logoUris", logoUris,
                "tosUri", tosUri,
                "tosUris", tosUris,
                "policyUri", policyUri,
                "policyUris", policyUris);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Integer number;

        private String clientName;

        private List<TaggedValue> clientNames;

        private String description;

        private List<TaggedValue> descriptions;

        private Long clientId;

        private String clientIdAlias;

        private Boolean clientIdAliasEnabled;

        private ClientTypeProperties clientType;

        private String logoUri;

        private List<TaggedValue> logoUris;

        private String tosUri;

        private List<TaggedValue> tosUris;

        private String policyUri;

        private List<TaggedValue> policyUris;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The sequential number of the client. The value of this property is assigned by Authlete.
         */
        public Builder number(@Nullable Integer number) {
            this.number = number;
            return this;
        }

        /**
         * The name of the client application. This property corresponds to `client_name` in
         * [OpenID Connect Dynamic Client Registration 1.0, 2. Client Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
         */
        public Builder clientName(@Nullable String clientName) {
            this.clientName = clientName;
            return this;
        }

        /**
         * Client names with language tags. If the client application has different names for different
         * languages, this property can be used to register the names.
         */
        public Builder clientNames(@Nullable List<TaggedValue> clientNames) {
            this.clientNames = clientNames;
            return this;
        }

        /**
         * The description about the client application.
         */
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }

        /**
         * Descriptions about the client application with language tags. If the client application has different
         * descriptions for different languages, this property can be used to register the descriptions.
         */
        public Builder descriptions(@Nullable List<TaggedValue> descriptions) {
            this.descriptions = descriptions;
            return this;
        }

        /**
         * The client identifier used in Authlete API calls. The value of this property is assigned by Authlete.
         */
        public Builder clientId(@Nullable Long clientId) {
            this.clientId = clientId;
            return this;
        }

        /**
         * The value of the client's `client_id` property used in OAuth and OpenID Connect calls. By
         * default, this is a string version of the `clientId` property.
         */
        public Builder clientIdAlias(@Nullable String clientIdAlias) {
            this.clientIdAlias = clientIdAlias;
            return this;
        }

        /**
         * Deprecated. Always set to `true`.
         */
        public Builder clientIdAliasEnabled(@Nullable Boolean clientIdAliasEnabled) {
            this.clientIdAliasEnabled = clientIdAliasEnabled;
            return this;
        }

        /**
         * The client type, either `CONFIDENTIAL` or `PUBLIC`. See [RFC 6749, 2.1. Client Types](https://datatracker.ietf.org/doc/html/rfc6749#section-2.1)
         * for details.
         */
        public Builder clientType(@Nullable ClientTypeProperties clientType) {
            this.clientType = clientType;
            return this;
        }

        /**
         * The URL pointing to the logo image of the client application.
         * 
         * <p>This property corresponds to `logo_uri` in [OpenID Connect Dynamic Client Registration 1.0, 2.
         * Client Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
         */
        public Builder logoUri(@Nullable String logoUri) {
            this.logoUri = logoUri;
            return this;
        }

        /**
         * Logo image URLs with language tags. If the client application has different logo images for
         * different languages, this property can be used to register URLs of the images.
         */
        public Builder logoUris(@Nullable List<TaggedValue> logoUris) {
            this.logoUris = logoUris;
            return this;
        }

        /**
         * The URL pointing to the "Terms Of Service" page.
         * 
         * <p>This property corresponds to `tos_uri` in
         * [OpenID Connect Dynamic Client Registration 1.0, 2. Client Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
         */
        public Builder tosUri(@Nullable String tosUri) {
            this.tosUri = tosUri;
            return this;
        }

        /**
         * URLs of "Terms Of Service" pages with language tags.
         * 
         * <p>If the client application has different "Terms Of Service" pages for different languages,
         * this property can be used to register the URLs.
         */
        public Builder tosUris(@Nullable List<TaggedValue> tosUris) {
            this.tosUris = tosUris;
            return this;
        }

        /**
         * The URL pointing to the page which describes the policy as to how end-user's profile data is used.
         * 
         * <p>This property corresponds to `policy_uri` in
         * [OpenID Connect Dynamic Client Registration 1.0, 2. Client Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
         */
        public Builder policyUri(@Nullable String policyUri) {
            this.policyUri = policyUri;
            return this;
        }

        /**
         * URLs of policy pages with language tags.
         * If the client application has different policy pages for different languages, this property can be used to register the URLs.
         */
        public Builder policyUris(@Nullable List<TaggedValue> policyUris) {
            this.policyUris = policyUris;
            return this;
        }

        public AuthAuthorizationApiClient build() {
            return new AuthAuthorizationApiClient(
                number, clientName, clientNames,
                description, descriptions, clientId,
                clientIdAlias, clientIdAliasEnabled, clientType,
                logoUri, logoUris, tosUri,
                tosUris, policyUri, policyUris);
        }

    }
}
