/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * AuthTokenApiFormRequestedTokenType
 * 
 * <p>The grant type of the access token when the access token was created.
 */
public enum AuthTokenApiFormRequestedTokenType {
    URN_IETF_PARAMS_OAUTH_TOKEN_TYPE_JWT("urn:ietf:params:oauth:token-type:jwt"),
    URN_IETF_PARAMS_OAUTH_TOKEN_TYPE_ACCESS_TOKEN("urn:ietf:params:oauth:token-type:access_token"),
    URN_IETF_PARAMS_OAUTH_TOKEN_TYPE_REFRESH_TOKEN("urn:ietf:params:oauth:token-type:refresh_token"),
    URN_IETF_PARAMS_OAUTH_TOKEN_TYPE_ID_TOKEN("urn:ietf:params:oauth:token-type:id_token"),
    URN_IETF_PARAMS_OAUTH_TOKEN_TYPE_SAML1("urn:ietf:params:oauth:token-type:saml1"),
    URN_IETF_PARAMS_OAUTH_TOKEN_TYPE_SAML2("urn:ietf:params:oauth:token-type:saml2"),
    DEVICE_CODE("DEVICE_CODE"),
    TOKEN_EXCHANGE("TOKEN_EXCHANGE"),
    JWT_BEARER("JWT_BEARER");

    @JsonValue
    private final String value;

    AuthTokenApiFormRequestedTokenType(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<AuthTokenApiFormRequestedTokenType> fromValue(String value) {
        for (AuthTokenApiFormRequestedTokenType o: AuthTokenApiFormRequestedTokenType.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

