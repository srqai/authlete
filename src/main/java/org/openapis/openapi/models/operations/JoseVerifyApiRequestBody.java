/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;


public class JoseVerifyApiRequestBody {
    /**
     * A JOSE object.
     */
    @JsonProperty("jose")
    private String jose;

    /**
     * Mandatory claims that are required to be included in the JOSE object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mandatoryClaims")
    private String mandatoryClaims;

    /**
     * Allowable clock skew in seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clockSkew")
    private Integer clockSkew;

    /**
     * The identifier of the client application whose keys are required for verification of the JOSE
     * object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientIdentifier")
    private String clientIdentifier;

    /**
     * The flag which indicates whether the signature of the JOSE object has been signed by a client
     * application with the client's private key or a shared symmetric key.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("signedByClient")
    private Boolean signedByClient;

    @JsonCreator
    public JoseVerifyApiRequestBody(
            @JsonProperty("jose") @Nonnull String jose,
            @JsonProperty("mandatoryClaims") @Nullable String mandatoryClaims,
            @JsonProperty("clockSkew") @Nullable Integer clockSkew,
            @JsonProperty("clientIdentifier") @Nullable String clientIdentifier,
            @JsonProperty("signedByClient") @Nullable Boolean signedByClient) {
        this.jose = Optional.ofNullable(jose)
            .orElseThrow(() -> new IllegalArgumentException("jose cannot be null"));
        this.mandatoryClaims = mandatoryClaims;
        this.clockSkew = clockSkew;
        this.clientIdentifier = clientIdentifier;
        this.signedByClient = signedByClient;
    }
    
    public JoseVerifyApiRequestBody(
            @Nonnull String jose) {
        this(jose, null, null,
            null, null);
    }

    /**
     * A JOSE object.
     */
    public String jose() {
        return this.jose;
    }

    /**
     * Mandatory claims that are required to be included in the JOSE object.
     */
    public Optional<String> mandatoryClaims() {
        return Optional.ofNullable(this.mandatoryClaims);
    }

    /**
     * Allowable clock skew in seconds.
     */
    public Optional<Integer> clockSkew() {
        return Optional.ofNullable(this.clockSkew);
    }

    /**
     * The identifier of the client application whose keys are required for verification of the JOSE
     * object.
     */
    public Optional<String> clientIdentifier() {
        return Optional.ofNullable(this.clientIdentifier);
    }

    /**
     * The flag which indicates whether the signature of the JOSE object has been signed by a client
     * application with the client's private key or a shared symmetric key.
     */
    public Optional<Boolean> signedByClient() {
        return Optional.ofNullable(this.signedByClient);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * A JOSE object.
     */
    public JoseVerifyApiRequestBody withJose(@Nonnull String jose) {
        this.jose = Utils.checkNotNull(jose, "jose");
        return this;
    }


    /**
     * Mandatory claims that are required to be included in the JOSE object.
     */
    public JoseVerifyApiRequestBody withMandatoryClaims(@Nullable String mandatoryClaims) {
        this.mandatoryClaims = mandatoryClaims;
        return this;
    }


    /**
     * Allowable clock skew in seconds.
     */
    public JoseVerifyApiRequestBody withClockSkew(@Nullable Integer clockSkew) {
        this.clockSkew = clockSkew;
        return this;
    }


    /**
     * The identifier of the client application whose keys are required for verification of the JOSE
     * object.
     */
    public JoseVerifyApiRequestBody withClientIdentifier(@Nullable String clientIdentifier) {
        this.clientIdentifier = clientIdentifier;
        return this;
    }


    /**
     * The flag which indicates whether the signature of the JOSE object has been signed by a client
     * application with the client's private key or a shared symmetric key.
     */
    public JoseVerifyApiRequestBody withSignedByClient(@Nullable Boolean signedByClient) {
        this.signedByClient = signedByClient;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        JoseVerifyApiRequestBody other = (JoseVerifyApiRequestBody) o;
        return 
            Utils.enhancedDeepEquals(this.jose, other.jose) &&
            Utils.enhancedDeepEquals(this.mandatoryClaims, other.mandatoryClaims) &&
            Utils.enhancedDeepEquals(this.clockSkew, other.clockSkew) &&
            Utils.enhancedDeepEquals(this.clientIdentifier, other.clientIdentifier) &&
            Utils.enhancedDeepEquals(this.signedByClient, other.signedByClient);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            jose, mandatoryClaims, clockSkew,
            clientIdentifier, signedByClient);
    }
    
    @Override
    public String toString() {
        return Utils.toString(JoseVerifyApiRequestBody.class,
                "jose", jose,
                "mandatoryClaims", mandatoryClaims,
                "clockSkew", clockSkew,
                "clientIdentifier", clientIdentifier,
                "signedByClient", signedByClient);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String jose;

        private String mandatoryClaims;

        private Integer clockSkew;

        private String clientIdentifier;

        private Boolean signedByClient;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * A JOSE object.
         */
        public Builder jose(@Nonnull String jose) {
            this.jose = Utils.checkNotNull(jose, "jose");
            return this;
        }

        /**
         * Mandatory claims that are required to be included in the JOSE object.
         */
        public Builder mandatoryClaims(@Nullable String mandatoryClaims) {
            this.mandatoryClaims = mandatoryClaims;
            return this;
        }

        /**
         * Allowable clock skew in seconds.
         */
        public Builder clockSkew(@Nullable Integer clockSkew) {
            this.clockSkew = clockSkew;
            return this;
        }

        /**
         * The identifier of the client application whose keys are required for verification of the JOSE
         * object.
         */
        public Builder clientIdentifier(@Nullable String clientIdentifier) {
            this.clientIdentifier = clientIdentifier;
            return this;
        }

        /**
         * The flag which indicates whether the signature of the JOSE object has been signed by a client
         * application with the client's private key or a shared symmetric key.
         */
        public Builder signedByClient(@Nullable Boolean signedByClient) {
            this.signedByClient = signedByClient;
            return this;
        }

        public JoseVerifyApiRequestBody build() {
            return new JoseVerifyApiRequestBody(
                jose, mandatoryClaims, clockSkew,
                clientIdentifier, signedByClient);
        }

    }
}
