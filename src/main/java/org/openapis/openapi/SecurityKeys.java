/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi;

import static org.openapis.openapi.operations.Operations.RequestOperation;

import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Exception;
import java.lang.String;
import org.openapis.openapi.models.operations.HskGetApiRequest;
import org.openapis.openapi.models.operations.HskGetApiRequestBuilder;
import org.openapis.openapi.models.operations.HskGetApiResponse;
import org.openapis.openapi.operations.HskGetApiOperation;


public class SecurityKeys {
    private final SDKConfiguration sdkConfiguration;

    SecurityKeys(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Get Security Key
     * 
     * @return The call builder
     */
    public HskGetApiRequestBuilder get() {
        return new HskGetApiRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Security Key
     * 
     * @param serviceId A service ID.
     * @param handle 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HskGetApiResponse get(@Nonnull String serviceId, @Nonnull String handle) throws Exception {
        return get(serviceId, handle, null);
    }

    /**
     * Get Security Key
     * 
     * @param serviceId A service ID.
     * @param handle 
     * @param serverURL Overrides the server URL.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HskGetApiResponse get(
            @Nonnull String serviceId, @Nonnull String handle,
            @Nullable String serverURL) throws Exception {
        HskGetApiRequest request = new HskGetApiRequest(serviceId, handle);
        RequestOperation<HskGetApiRequest, HskGetApiResponse> operation
              = new HskGetApiOperation(sdkConfiguration, serverURL);
        return operation.handleResponse(operation.doRequest(request));
    }

}
